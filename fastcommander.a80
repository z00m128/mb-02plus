;FAST COMMANDER 0.1delta
;by EYE^K3l 1998 & +GAMA 2002

		device	zxspectrum48
		

		org	24200

;definicie pre lahsiu orientaciu v zdrojaku

;sluzby ROM BIOSu
ROMDIS		equ	#3c98			;ROM banka, zakazany zapis
DOSDIS		equ	#3c9A			;DOS banka, zakazany zapis
ROMENA		equ	#3c9c			;ROM banka, povoleny zapis
DOSENA		equ	#3c9e			;DOS banka, povoleny zapis

;sluzby FDC BIOSu
FDSETOFF	equ	#11			;mod vypinania motorov
FDAKTIVE	equ	#0c			;aktvuje danu mechaniku

;sluzby BSDOSu
BDSDDX		equ	#0c			;sposob vypisovania znakov pre sluzbu DISP

;format polozek
;00: identifikator
;01-02: cislo
;03-30: text (28)
;31: 0

START:		di
		ld	sp,STACK		;SP na vlastny stack
		call	DOSENA			;prestrankuje do DOSu
		call	STATUS			;zisti konfiguraciu pocitaca

		xor	a
		out	(254),a			;cierny border

		ld	hl,INTRPT		;interrupt na rutinu zobrazujucu hodiny
		ld	(45567),hl
		ld	a,177
		ld	i,a
		im	2
		ei

		call	OZNDEL1			;zrusi oznacenie v oboch paneloch
		call	OZNDEL2

		ld	a,2			;slpec vypisu=2 (lavy panel)
		ld	(PRINTD+1),a
		ld	(PANELY+1),sp		;odlozime si SP
		ld	(MAIN+1),sp
PANELY1:	call	WORKB			;zobrazi panely
PANELY:		ld	sp,0			;obnovenie zasobnika

		ld	e,0			;ak nie je mechanika aktivna, motor sa bude vypinat
		ld	a,FDSETOFF		;sluzba SETOFF
		rst	#18			;FDC BIOS

		call	SWITCH			;prehodi sa na neaktivny panel
		call	SWAPPRNT		;vypis sa prepne na pravy panel
		call	REREAD1			;nacita a zobrazi subory v neaktivnom paneli
		call	SWITCH			;prehodi sa na aktivny panel
		call	SWAPPRNT		;vypis sa prepne na lavy panel
		call	REREAD1			;nacita a zobrazi subory v aktivnom paneli

MAIN:		ld	sp,0			;obnovenie zasobnika
		call	CHANGE			;zisti ci nebol vymeneny disk
MAIN1:		call	CBAR			;nakresli kurzor

		ld	e,1			;vypis znakov bude prebiehat do pamate, nie na obrazovku
		ld	a,BDSDDX		;sluzba SDDX
		rst	#20			;BSDOS

		ld	hl,(FILE1)		;vezme cislo suboru
		ld	c,'0'			;nevyznamne nuly sa zobrazia
		ld	iy,NUMBER		;do iy ide adresa bufferu
		call	DEC16+2			;zavola zobrazenie cisla
		ld	a,(PRINTD+1)		;v PRINTD+1 by malo byt 2, cize lavy panel
		add	a,20			;stlpec 2+22
		ld	l,a			;l=cislo stlpca
		ld	h,19			;h=cislo riadku
		ld	de,NUMBER		;de=adresa textu
		call	PRINT			;vytlacime cislo suboru

;Hlavny program pre obsluhu klavesnice
MAIN0:		call	KEY			;zavola sa INKEY$ z ROM
		cp	11			;^ - kurzor hore
		jp	z,NAHORU
		cp	10			;v - kurzor dole
		jp	z,DOLU
		cp	'0'			;0 - hlavne menu
		jp	z,UPPER
		cp	8			;< - lavy panel
		jp	z,ONE
		cp	9			;> - pravy panel
		jp	z,TWO
		cp	'1'			;1 - zmena mechaniky v aktivnom paneli - dole
		jp	z,LFT
		cp	'2'			;2 - zmena mechaniky v aktivnom paneli - hore
		jp	z,RGT
		cp	'3'			;3 - viewer suboru, po sektoroch
		jp	z,VIEW
		cp	'5'			;5 - kopirovanie, sekvencne po sektoroch
		jp	z,COPY
		cp	'x'			;x - ukoncenie programu
		jp	z,EXIT
		cp	'd'			;d - zmena adresara
		jp	z,CHDIR
		cp	'p'			;p - zotrasenie adresara
		jp	z,PRESS
		cp	'+'			;+ - oznacenie suborov
		jp	z,OZNALL
		cp	'*'			;* - zmena oznacenia suborov
		jp	z,UZNALL
		cp	'-'			;- - odznacenie suborov
		jp	z,ODZNALL
		cp	'i'			;i - informacie o adresari
		jp	z,II
		cp	7			;EDIT- oznacenie suborov podla masky
		jp	z,OZNMASK
		cp	13			;ENTER - oznacenie jedneho suboru
		jp	z,OZN
		cp	'8'			;8 - zmazanie oznacenych suborov
		jp	z,DELETE
		cp	'9'			;9 - premenovanie suboru
		jp	z,RENAME
		cp	'u'			;u - undelete suboru
		jp	z,UNDELETE
		ld	hl,MAIN			;uschova adresy hlavneho programu kvoli REREAD
		push	hl			;lebo sa vracia priamo na MAIN, nie sem
		cp	'r'			;r - znovunacitanie disku
		jp	z,REREAD
		pop	hl			;obnova adresy hlavneho programu
		jr	MAIN0

;Prepnutie vypisu panelov zo stlpca 2 (lavy panel), na stlpec 34 (pravy panel), and vice versa
SWAPPRNT:	ld	a,(PRINTD+1)		;nacitame nastavenie stlpca
		cp	2
		jr	z,SWPP			;ak sme vlavo tak nic
		ld	a,2
		jr	SWPS
SWPP:		ld	a,34			;inak sme vpravo
SWPS:		ld	(PRINTD+1),a
		ret

;Zobrazenie kurzora, je len atributovy
CBAR:		ld	hl,(POZICE1)		;nacitame poziciu kurzora
		call	ADRSET			;zistime si pixelovu polohu
		call	AAA			;vypocitame adresu pociatocneho atributu
		ld	b,14
CBR:		res	3,(hl)			;zobrazime kurzor
		inc	l
		djnz	CBR
		ret

;Zmazanie kurzora
CLBAR:		ld	hl,(POZICE1)		;to iste ako v CBAR,
CLBAR1:		call	ADRSET
		call	AAA
		ld	b,14
CLBAR0:		set	3,(hl)			;len kurzor sa maze
		inc	l
		djnz	CLBAR0
		ret

LFT		call	CLBAR
		ld	a,(PRINTD+1)
		cp	2
		jp	z,CHDRV
		ld	a,2
		ld	(PRINTD+1),a
		call	SWITCH
		ld	hl,PANEL1
		ld	(OORT1),hl
		ld	hl,PANEL1+512
		ld	(OORT2),hl
		jp	CHDRV
RGT		call	CLBAR
		ld	a,(PRINTD+1)
		cp	34
		jr	z,CHDRV
		ld	a,34
		ld	(PRINTD+1),a
		call	SWITCH
		ld	hl,PANEL1
		ld	(OORT1),hl
		ld	hl,PANEL1+512
		ld	(OORT2),hl
CHDRV		ld	a,(PRINTD+1)
		srl	a
		ld	b,0
		ld	c,a
		ld	hl,10*256-1
		add	hl,bc
		ld	de,3*256+15
		call	IN
		exx
		ld	a,(PRINTD+1)
		ld	b,0
		ld	c,a
		ld	hl,11*256+0
		add	hl,bc
		ld	de,CHDTX2
		call	PRINT
		exx
		ld	a,120
		call	MENU2
		ld	a,(PRINTD+1)
		ld	b,0
		ld	c,a
		ld	hl,10*256+8
		add	hl,bc
		ld	de,CHDTX1
		call	PRINT
CHIN		call	PAUSE
		ld	a,(PRINTD+1)
		ld	b,0
		ld	c,a
		ld	hl,11*256+23
		add	hl,bc
		ld	de,12346
		ld	a,(OPT)
		bit	2,a
		jp	z,NEHDD
HDD		ld	iyl,4
		call	INTXT
		jr	nc,CHIN
		ld	de,TEXT
		ld	hl,0
HDD1		ld	a,(de)
		sub	'0'
		jr	c,HDD2
		cp	10
		jr	nc,HDD2
		inc	de
		add	hl,hl
		ld	c,l
		ld	b,h
		add	hl,hl
		add	hl,hl
		add	hl,bc
		ld	c,a
		ld	b,0
		add	hl,bc
		jr	HDD1
HDD2		ld	e,l
		ld	a,h
		or	a
		jr	nz,CHIN
		jr	SETHDD

NEHDD		ld	iyl,2
		call	INTXT
		jr	nc,CHIN
		ld	a,(TEXT)
		sub	48
		jr	c,CHIN
		ld	hl,DRV9
		cp	9
		jr	z,CHECK1
		cp	5
		jr	nc,IDRV
		or	a
		jr	z,IDRV
		ld	hl,DRV4
		ld	b,4
CHECK0		cp	b
		jr	z,CHECK1
		dec	hl
		dec	hl
		djnz	CHECK0
CHECK1		ld	e,a
		xor	a
		cp	(hl)
		jr	z,IDRV
SETHDD		ld	a,e
		ld	(ACTDRV1),a
		ld	a,#13
		rst	#20			;BSDOS
		call	OUT
		call	REREAD
		jp	MAIN
IDRV		call	OUT
		ld	hl,ITT
		ld	a,#34
		rst	#20			;BSDOS
		call	PAUSE
		jp	c,CHDRV
		jp	MAIN
CHDTX1		db	"Change Drive"
		nop
CHDTX2		db	"Enter number of"
		db	" drive:      "
		nop


CHDIR		ld	hl,10*256+7
		ld	de,3*256+18
		call	IN
		exx
		ld	hl,11*256+16
		ld	de,CHDTXT2
		call	PRINT
		exx
		ld	a,120
		call	MENU2
		ld	hl,10*256+26
		ld	de,CHDTXT1
		call	PRINT
		ld	hl,11*256+43
		ld	de,12346
		ld	iyl,4
		call	INTXT
		jp	nc,CHDIREB
		call	A2N
		jp	nc,IDIR
		push	ix
		pop	hl
		ld	de,256
		call	CPHLDE
		jp	nc,IDIR
		ld	e,l
		ld	a,#14
		rst	#20			;BSDOS
		call	OUT
		call	REREAD
CHDIRE		jp	MAIN
CHDIREB		call	OUT
		jp	MAIN
IDIR		call	OUT
		ld	hl,ITT
		ld	a,#34
		rst	#20			;BSDOS
		call	PAUSE
		jp	c,CHDIR
		jp	MAIN
CHDTXT1		db	"Change Dir"
		nop
CHDTXT2		db	"Enter number of"
		db	" directory:    "
		db	"   "
		nop

WRTN		push	hl
		ld	e,1
		ld	a,BDSDDX		;sluzba SDDX
		rst	#20			;BSDOS
		ld	e,l
		ld	c,48
		ld	iy,NUMBE+1
		call	DEC8+2
		ld	a,(PRINTD+1)
		add	a,13
		ld	l,a
		ld	h,19
		ld	de,NUMBE
		call	PRINT
		pop	hl
		ret

REREAD		call	OZNDEL1
REREAD1		ld	a,#1E
		rst	#20			;BSDOS
;kill
		ld	a,(ACTDRV1)
		ld	e,a
		ld	a,#13
		rst	#20			;BSDOS
;setdrv
		ld	a,(ACTDIR1)
		ld	e,a
		ld	a,#14
		rst	#20			;BSDOS
;setdir
RRP1
		ld	a,(ACTDRV1)
		ld	e,a
		call	AKTIVE
		ld	hl,JIST1
		ld	de,1
		call	RDSEC
		cp	2
		jr	nz,RRP1
		ld	hl,0
		ld	(FILE1),hl
		ld	bc,0
		ld	ix,PANEL1
		call	READDIR
		ld	ix,PANEL1
		call	PRINTD
		ld	hl,PANEL1
		ld	(INPANEL1),hl
		ld	hl,2*256
		ld	a,(PRINTD+1)
		ld	e,a
		ld	d,0
		add	hl,de
		ld	(POZICE1),hl
		ld	a,#12
		rst	#20			;BSDOS
		ld	a,d
		ld	(ACTDIR1),a
		ld	l,d
		call	WRTN
FREE		ld	a,#1F
		rst	#20			;BSDOS
		ret	nc
		push	bc
		ld	e,1
		ld	a,BDSDDX		;sluzba SDDX
		rst	#20			;BSDOS
		pop	bc
		ld	h,b
		ld	l,c
		ld	c,48
		ld	iy,NUMBER
		call	DEC16+2
		ld	h,21
		ld	a,(PRINTD+1)
		add	a,10
		ld	l,a
		ld	de,NUMBER
		call	PRINT
		ld	hl,JIST1+#26
		ld	de,NAME
		ld	bc,10
		ldir
		ld	h,20
		ld	a,(PRINTD+1)
		add	a,13
		ld	l,a
		ld	de,NAME
		call	PRINT
WRTD		ld	a,(ACTDRV1)
		ld	e,a
		ld	c,48
		ld	iy,NUMBE+1
		call	DEC8+2
		ld	a,(PRINTD+1)
		add	a,7
		ld	l,a
		ld	h,19
		ld	de,NUMBE
		call	PRINT
		ret

REREOZN		ld	hl,(INPANEL1)
		ld	a,(POZICE1+1)
		sub	2
		or	a
		jr	z,NEPOC
		ld	b,a
		ld	de,32
POC		or	a
		sbc	hl,de
		djnz	POC
NEPOC		push	hl
		pop	ix
		call	PRINTD
		jp	MAIN

ONE		ld	a,(PRINTD+1)
		cp	2
		jp	z,MAIN

		call	CLBAR
		ld	a,(ACTDRV2)
		ld	e,a
		ld	a,#13
		rst	#20			;BSDOS
		ld	a,(ACTDIR2)
		ld	e,a
		ld	a,#14
		rst	#20			;BSDOS
		jp	nc,MAIN

		ld	a,2
		ld	(PRINTD+1),a
		call	SWITCH
		ld	hl,PANEL1
		ld	(OORT1),hl
		ld	hl,PANEL1+512
		ld	(OORT2),hl

		ld	a,(ACTDRV1)
		ld	hl,ACTDRV2
		cp	(hl)
		jp	nz,MAIN
		call	REREAD
		jp	MAIN1

TWO		ld	a,(PRINTD+1)
		cp	34
		jp	z,MAIN

		call	CLBAR
		ld	a,(ACTDRV2)
		ld	e,a
		ld	a,#13
		rst	#20			;BSDOS
		ld	a,(ACTDIR2)
		ld	e,a
		ld	a,#14
		rst	#20			;BSDOS
		jp	nc,MAIN

		ld	a,34
		ld	(PRINTD+1),a
		call	SWITCH
		ld	hl,PANEL1
		ld	(OORT1),hl
		ld	hl,PANEL1+512
		ld	(OORT2),hl
		ld	hl,(POZICE1)

		ld	a,(ACTDRV1)
		ld	hl,ACTDRV2
		cp	(hl)
		jp	nz,MAIN
		call	REREAD
		jp	MAIN1

SWITCH		call	OZNCHAN
		ld	hl,FILE2
		ld	de,FILE1
		ld	bc,2*1024+14
SW		ld	a,(hl)
		ld	xh,a
		ld	a,(de)
		ld	(hl),a
		ld	a,xh
		ld	(de),a
		inc	hl
		inc	de
		dec	bc
		ld	a,b
		or	c
		jr	nz,SW
		ret

NAHORU		ld	ix,POZICE1
		ld	a,(ix+1)
		cp	2
		jr	z,NAH_U
		ld	bc,(FILE1)
		dec	bc
		ld	(FILE1),bc
		ld	l,(ix+0)
		ld	h,a
		dec	a
		ld	(ix+1),a
		call	CLBAR1
		ld	hl,(INPANEL1)
		ld	de,32
		or	a
		sbc	hl,de
		ld	(INPANEL1),hl
		jp	DOMAIN
NAH_U		ld	bc,(FILE1)
		dec	bc
		ld	h,b
		ld	l,c
		ld	de,65535
		call	CPHLDE
		jp	z,DOMAIN
		ld	(FILE1),bc
		ld	hl,(INPANEL1)
		ld	de,(OORT1)
		call	CPHLDE
		jr	z,NAH_U0
		or	a
		ld	de,32
		sbc	hl,de
		push	hl
		pop	ix
		call	PRINTD
		ld	hl,(INPANEL1)
		ld	de,32
		or	a
		sbc	hl,de
		ld	(INPANEL1),hl
		jp	MAIN1
NAH_U0		call	CHANGE
		ld	hl,(OORT1)
		ld	de,(OORT2)
		ld	bc,512
		ldir
		ld	hl,(FILE1)
		ld	de,15
		or	a
		sbc	hl,de
		ld	b,h
		ld	c,l
		ld	ix,(OORT1)
		ld	a,16
		call	READ1
		ld	ix,(OORT1)
		ld	de,480
		add	ix,de
		call	PRINTD
		ld	hl,(OORT1)
		ld	de,480
		add	hl,de
		ld	(INPANEL1),hl
		jp	MAIN1

DOLU		ld	ix,POZICE1
		ld	a,(ix+1)
		cp	17
		jr	z,DOLU_U
		ld	bc,(FILE1)
		inc	bc
		ld	(FILE1),bc
		ld	l,(ix+0)
		ld	h,a
		inc	a
		ld	(ix+1),a
		call	CLBAR1
		ld	hl,(INPANEL1)
		ld	de,32
		add	hl,de
		ld	(INPANEL1),hl
		jr	DOMAIN
DOLU_U		ld	bc,(FILE1)
		inc	bc
		ld	d,b
		ld	e,c
		ld	hl,(LENDIR1)
		call	CPHLDE
		jp	z,DOMAIN
		ld	(FILE1),bc
		ld	hl,(OORT1)
		ld	de,1024-32
		add	hl,de
		ex	de,hl
		ld	hl,(INPANEL1)
		call	CPHLDE
		jr	z,DOLU_U0
		ld	de,14*32
		or	a
		sbc	hl,de
		push	hl
		pop	ix
		call	PRINTD
		ld	hl,(INPANEL1)
		ld	de,32
		add	hl,de
		ld	(INPANEL1),hl
		jp	MAIN1
DOLU_U0		call	CHANGE
		ld	hl,(OORT2)
		ld	de,(OORT1)
		ld	bc,512
		ldir
		ld	bc,(FILE1)
		ld	ix,(OORT2)
		ld	a,16
		call	READ1
		ld	ix,(OORT1)
		ld	de,32
		add	ix,de
		call	PRINTD
		ld	hl,(OORT2)
		ld	(INPANEL1),hl
		jp	MAIN1

DOMAIN		call	CBAR
		call	PAUSE
		jp	MAIN1


;bc=cislo souboru
;ix=panel1,panel2
READDIR		push	bc
		push	ix
		ld	a,#18
		rst	#20			;BSDOS
		jp	nc,CHDRVP
		ld	hl,0
		call	CPHLDE
		call	z,TO32
		ld	(LENDIR1),de
		pop	ix
		pop	bc
		ld	a,32
READ1		push	af
		push	bc
		push	bc
		ld	a,#16
		rst	#20			;BSDOS
		pop	bc
		jp	nc,CHDRVP
		call	z,BAD
		ld	(ix+1),c
		ld	(ix+2),b
		ld	a,(ix+0)
		or	a
		jp	z,EMPTY
		cp	#80
		jp	z,DIR
		ld	a,(ix+#05)
		add	a,48
		ld	(ITEM),a
		push	ix
		pop	hl
		ld	de,6
		add	hl,de
		ld	de,ITEM+2
		ld	bc,10
READ3		ld	a,(hl)
		cp	32
		call	c,NEUT
		ld	(de),a
		inc	de
		cpi
		jp	pe,READ3
		ld	e,1
		ld	a,BDSDDX		;sluzba SDDX
		rst	#20			;BSDOS
		ld	l,(ix+#12)
		ld	h,(ix+#13)
		ld	iy,ITEM+14
		call	DEC16
		ld	l,(ix+#18)
		ld	h,(ix+#19)
		ld	e,(ix+#1A)
		ld	d,(ix+#1B)
		ld	iy,ITEM+21
		call	DEC32
		ld	hl,ITEM
		jr	EMDI

NEXT		xor	a
		ld	(de),a
		ld	bc,32
		add	ix,bc
		pop	bc
		inc	bc
		pop	af
		dec	a
		jr	nz,READ1
		ret

BAD		xor	a
		ld	(ix+0),a
		ret
TO32		ld	de,32
		ret

EMPTY		ld	hl,EMITEM
		jr	EMDI
DIR		push	ix
		pop	hl
		ld	de,6
		add	hl,de
		ld	de,DIRITEM+2
		ld	bc,10
DIR0		ld	a,(hl)
		cp	32
		call	c,NEUT
		ld	(de),a
		inc	de
		cpi
		jp	pe,DIR0
		ld	hl,DIRITEM
EMDI		push	ix
		pop	de
		inc	de
		inc	de
		inc	de
		ld	bc,28
		ldir
		jp	NEXT

CHDRVP		call	PAUSE
		ld	b,6
CHDR0		inc	sp
		djnz	CHDR0
		jp	CHDRV

NEUT		ld	a,'-'
		ret
ITEM		nop
		db	" ----------  "
		ds	5
		db	"  "
		ds	7
DIRITEM		db	"- ----------  <"
		db	"DIRECTORY>   "
EMITEM		db	"- ----------   "
		db	"   0        0"

;ix=zacatek
PRINTD		ld	hl,2*256+2
		ld	b,16
PRINTD1		push	bc
		push	ix
		push	hl
		ld	b,(ix+2)
		ld	c,(ix+1)
		call	OZNTEST
		or	a
		jr	nz,WHITE
		jr	CYAN
WHITE		pop	hl
		pop	ix
		pop	bc
		push	bc
		push	ix
		push	hl
		ld	a,(ix+0)
		rla
		jr	nc,RED
		ld	a,79
		jr	COLOR
RED		ld	a,74
		jr	COLOR
BLACK		ld	a,72
		jr	COLOR
CYAN		pop	hl
		pop	ix
		pop	bc
		push	bc
		push	ix
		push	hl
		ld	a,(ix+0)
		rla
		jr	nc,BLACK
		ld	a,77
COLOR		push	hl
		ex	af,af'
		call	ADRSET
		call	AAA
		ex	af,af'
		ld	b,14
COL0		ld	(hl),a
		inc	l
		djnz	COL0
		pop	hl
		push	ix
		pop	de
		inc	de
		inc	de
		inc	de
		call	PRINT
		pop	hl
		inc	h
		pop	ix
		ld	bc,32
		add	ix,bc
		pop	bc
		djnz	PRINTD1
		ret

UPPER		call	CLBAR
		ld	hl,0*256+1
		ld	a,3
		call	INV
		ld	ix,DATA
UPPER0		push	hl
		call	KEY
		pop	hl
UPPER1		cp	9
		jr	z,RIGHT
		cp	8
		jr	z,LEFT
		cp	13
		jp	z,ENTER
		call	ESCAPE
		jp	nc,ESC
		jr	UPPER0
		nop
DATA		db	1,4,10,21,28
		db	3,6,11,7,9
RIGHT		ld	a,(ix+5)
		call	INV
		inc	ix
		ld	l,(ix+0)
		ld	a,l
		cp	3
		call	z,BE
		ld	a,(ix+5)
		call	INV
		call	PAUSE
		jr	UPPER0
LEFT		ld	a,(ix+5)
		call	INV
		dec	ix
		ld	l,(ix+0)
		ld	a,l
		or	a
		call	z,EN
		ld	a,(ix+5)
		call	INV
		call	PAUSE
		jr	UPPER0
BE		ld	l,1
		ld	ix,DATA
		ret
EN		ld	l,28
		ld	ix,DATA+4
		ret
ESC		ld	a,(ix+5)
		call	INV
		jp	MAIN
ENTER		ld	(IXPOS),ix
		ld	(HLPOS),hl
		ld	a,l
		cp	4
		jp	z,MNU2
		cp	10
		jp	z,MNU3
		cp	21
		jp	z,MNU4
		cp	28
		jp	z,MNU5

MNU1		ld	hl,1*256+0
		ld	de,6*256+8
		call	IN
		exx
		ld	hl,2*256+1
		ld	de,TMNU1
		ld	a,15
		ld	b,4
		call	PMNU
		exx
		call	MENU1
		call	BAR
		cp	1
		jp	z,ABOUT
		cp	2
		jp	z,SYSTEM
		cp	3
		jp	z,OPTIONS
		jp	EXIT

TMNU1		db	" About        "
		nop
		db	" System Info  "
		nop
		db	" Options      "
		nop
		db	" Exit       X "
		nop

MNU2		ld	hl,1*256+2
		ld	de,10*256+11
		call	IN
		exx
		ld	hl,2*256+5
		ld	de,TMNU2
		ld	b,8
		ld	a,21
		call	PMNU
		exx
		call	MENU1
		call	BAR
		cp	1
		jp	z,VIEW
		cp	2
		jp	z,COPY
		cp	5
		jp	z,DELETE
		cp	6
		jp	z,RENAME
		cp	8
		jp	z,UNDELETE
		jp	MAIN

TMNU2		db	" View          "
		db	"   3 "
		nop
		db	" Copy          "
		db	"   5 "
		nop
		db	" Move          "
		db	"   6!"
		nop
		db	" Search        "
		db	"   7!"
		nop
		db	" Delete        "
		db	"   8 "
		nop
		db	" Rename        "
		db	"   9 "
		nop
		db	" Change Addr   "
		db	"   A!"
		nop
		db	" Undelete      "
		db	"   U "
		nop

MNU3		ld	hl,1*256+5
		ld	de,5*256+8
		call	IN
		exx
		ld	hl,2*256+11
		ld	de,TMNU3
		ld	a,15
		ld	b,3
		call	PMNU
		exx
		call	MENU1
		call	BAR
		cp	1
		jp	z,MAIN
		cp	2
		jp	z,REDISK
		jp	SETTIME

TMNU3		db	" Diskcopy    !"
		nop
		db	" Rename Disk  "
		nop
		db	" Set Time     "
		nop

MNU4		ld	hl,1*256+10
		ld	de,9*256+13
		call	IN
		exx
		ld	hl,2*256+21
		ld	de,TMNU4
		ld	a,25
		ld	b,7
		call	PMNU
		exx
		call	MENU1
		call	BAR
		cp	1
		jp	z,PRESS
		cp	2
		jp	z,OZNMASK
		cp	3
		jp	z,OZNALL
		cp	4
		jp	z,ODZNALL
		cp	5
		jp	z,UZNALL
		cp	6
		jp	z,II
		jp	MAIN


TMNU4		db	" Press Director"
		db	"y      P "
		nop
		db	" Select Group  "
		db	"    Edit "
		nop
		db	" Select All    "
		db	"       + "
		nop
		db	" Deselect All  "
		db	"       - "
		nop
		db	" Swap Selection"
		db	"       * "
		nop
		db	" Panel info    "
		db	"       I "
		nop
		db	" Nothing...   !"
		db	"         "
		nop

MNU5		ld	hl,1*256+14
		ld	de,6*256+13
		call	IN
		exx
		ld	hl,2*256+29
		ld	de,TMNU5
		ld	b,4
		ld	a,25
		call	PMNU
		exx
		call	MENU1
		call	BAR
		cp	1
		jr	z,RR
		cp	2
		jp	z,CHDIR
		cp	3
		jp	z,LFT
		cp	4
		jp	z,RGT
		jp	MAIN

RR		call	REREAD
		jp	MAIN1
TMNU5		db	" Re-read       "
		db	"       R "
		nop
		db	" Change Dir    "
		db	"       D "
		nop
		db	" Change Drive L"
		db	"eft    1 "
		nop
		db	" Change Drive R"
		db	"ight   2 "
		nop

BAR		inc	h
		ld	a,d
		ld	(COMP+1),a
		dec	a
		ld	(CH1+1),a
		sla	l
		inc	l
		ld	a,e
		dec	a
		rla
		ld	(INVP+1),a
		call	INV
		call	PAUSE
BAR0		push	hl
		call	KEY
		pop	hl
		cp	11
		jr	z,UP
		cp	10
		jr	z,DOWN
		cp	13
		jr	z,CHOICE
		cp	8
		jr	z,RT
		cp	9
		jr	z,RT
		call	ESCAPE
		jp	nc,RT
		jr	BAR0
UP		call	INVP
		dec	h
		ld	a,h
		cp	1
		call	z,CH1
		call	INVP
		call	PAUSE
		jr	BAR0
CH1		ld	h,0
		ret
DOWN		call	INVP
		inc	h
		ld	a,h
COMP		cp	0
		call	z,CH2
		call	INVP
		call	PAUSE
		jr	BAR0
CH2		ld	h,2
		ret
INVP		ld	a,0
		jp	INV
RT		inc	sp
		inc	sp
		push	af
		call	OUT
		pop	af
		ld	ix,(IXPOS)
		ld	hl,(HLPOS)
		call	PAUSE
		cp	32
		jp	z,UPPER0
		jp	UPPER1
CHOICE		ld	a,h
		dec	a
		push	af
		call	OUT
		ld	hl,(HLPOS)
		ld	ix,(IXPOS)
		ld	a,(ix+5)
		call	INV
		pop	af
		jp	PAUSE

PMNU		ld	(TDH+1),a
PMNU0		push	bc
		push	hl
		push	de
		call	PRINT
		pop	hl
TDH		ld	bc,0
		add	hl,bc
		ex	de,hl
		pop	hl
		inc	h
		pop	bc
		djnz	PMNU0
		ret
;------------------------------
ABOUT		ld	hl,10*256+8
		ld	de,5*256+16
		call	IN
		exx
		ld	hl,11*256+17
		ld	de,ABTXT2
		ld	b,3
		ld	a,31
		call	PMNU
		exx
		ld	a,120
		call	MENU2
		ld	hl,10*256+28
		ld	de,ABTXT1
		call	PRINT
		call	AKEY
		call	OUT
		jp	MAIN
ABTXT1		db	"About FC"
		nop
ABTXT2		db	" Fast Commander"
		db	" Version 0.1 D "
		nop
		db	"      K3L Corp."
		db	" 1996-2000     "
		nop
		db	"         Code b"
		db	"y EYE          "
		nop

OPTIONS		ld	hl,10*256+10
		ld	de,5*256+12
		call	IN
		exx
		ld	hl,11*256+21
		ld	de,OPTXT2
		ld	b,3
		ld	a,23
		call	PMNU
		exx
		ld	a,120
		call	MENU2
		ld	hl,10*256+28
		ld	de,OPTXT1
		call	PRINT
		ld	hl,10*256+35
		ld	a,205
		call	CHAR
		ld	ix,OPT
		ld	h,11
		bit	0,(ix+0)
		call	nz,PX
		ld	h,12
		bit	1,(ix+0)
		call	nz,PX
		ld	h,13
		bit	2,(ix+0)
		call	nz,PX
		ld	a,(OPT)
		ld	xh,a
		ld	hl,11*256+25
		ld	a,17
		call	INV
		ld	h,11
TK		push	hl
		call	KEY
		pop	hl
		cp	11
		jr	z,NNN
		cp	10
		jr	z,MMM
		cp	32
		jr	z,FLOP
		cp	13
		jr	z,HAPPY
		call	ESCAPE
		jr	nc,NO
		jr	TK
HAPPY		ld	a,xh
		ld	(OPT),a
NO		call	OUT
		jp	MAIN
FLOP		ld	a,h
		sub	11
		add	a,a
		add	a,a
		add	a,a
		add	a,71
		ld	(MDF3+1),a
		add	a,64
		ld	(MDF1+1),a
		add	a,64
		ld	(MDF2+1),a
		ld	a,xh
MDF3		bit	0,a
		jr	z,IH
		ld	l,23
		push	hl
		call	REM
		pop	hl
		ld	a,xh
MDF1		res	0,a
		ld	xh,a
		call	PAUSE
		jr	TK
IH		call	PX
		ld	a,xh
MDF2		set	0,a
		ld	xh,a
		call	PAUSE
		jr	TK
REM		call	ADRSET
		ld	b,8
REM0		ld	a,(hl)
		and	240
		ld	(hl),a
		inc	h
		djnz	REM0
		ret
NNN		call	ARAB
		dec	h
		ld	a,h
		cp	10
		call	z,NNN1
		jr	ARAB0
NNN1		ld	h,13
		ret
MMM		call	ARAB
		inc	h
		ld	a,h
		cp	14
		call	z,MMM1
		jr	ARAB0
MMM1		ld	h,11
		ret
ARAB		ld	l,25
		ld	a,17
		jp	INV
ARAB0		call	ARAB
		call	PAUSE
		jp	TK
PX		ld	a,'X'
		ld	l,23
		push	hl
		call	CHAR
		pop	hl
		ret
OPT		db	%00000110
OPTXT1		db	"Options"
		nop
OPTXT2		db	" ( ) Beep after"
		db	" Copy  "
		nop
		db	" ( ) Clock     "
		db	"       "
		nop
		db	" ( ) Harddisk E"
		db	"nable  "
		nop

EXIT		ld	a,#34
		ld	hl,QTXT
		rst	#20			;BSDOS
		jr	nc,BACK
		jp	RETDOS
BACK		call	OUT
		jp	MAIN
QTXT		db	"Exit to Dos ?"
		db	#00,#C9

CHANGE		ld	a,#12
		rst	#20			;BSDOS
		call	AKTIVE
		cp	2
		jr	nz,CHREP
		ld	hl,BOOT
		ld	de,1
		call	RDSEC
		cp	1
		jr	z,CHANGE
		or	a
		jr	z,CHABORT
		ld	de,JIST1
		ld	hl,BOOT
		ld	bc,1024
OPICE		ld	a,(de)
		cp	(hl)
		jr	nz,CHREP
		inc	hl
		inc	de
		dec	bc
		ld	a,c
		or	b
		jr	nz,OPICE
		ret
CHREP		ld	a,#34
		ld	hl,CHTXT
		rst	#20			;BSDOS
		jr	nc,CHABORT
		pop	hl
		call	REREAD
		jp	MAIN1
CHABORT		pop	hl
		jp	MAIN
CHTXT		db	"Disk changed !"
		db	#00,#C9

SYSTEM		di
		ld	a,233
		ld	(INTRPT),a
		ld	hl,CPU1
		ei
		halt
CPU1		ei
		ld	hl,CPU2
		ld	bc,0
CPU0		inc	bc
		jr	CPU0
CPU2		pop	hl
		pop	hl
		ld	a,243
		ld	(INTRPT),a
		ei
LN		equ	$-SYSTEM
		ld	(KOEF2),bc
		ld	hl,SYSTEM
		ld	de,FASTMEM
		ld	bc,LN
		ldir
		ld	hl,FASTMEM+11
		ld	(FASTMEM+7),hl
		ld	hl,FASTMEM+21
		ld	(FASTMEM+13),hl
		ld	a,201
		ld	(de),a
		call	FASTMEM
		ld	(KOEF1),bc
		ld	hl,6*256+7
		ld	de,12*256+19
		call	IN
		push	hl
		push	de
		ld	hl,7*256+16
		ld	de,STEXT2
		ld	b,10
		ld	a,16
		call	PMNU

		ld	e,1
		ld	a,BDSDDX		;sluzba SDDX
		rst	#20			;BSDOS

		ld	de,(KOEF2)
		ld	hl,3614
		call	CPHLDE
		ld	de,COMP3
		jr	c,DONE
		ld	de,(KOEF1)
		ld	hl,3935
		call	CPHLDE
		exx
		ld	de,COMP2
		jr	c,DONE
		exx
		ld	hl,3878
		call	CPHLDE
		ld	de,COMP1
		jr	c,DONE
		ld	de,COMP4
DONE		ld	hl,7*256+31
		call	PRINT
		ld	de,(KOEF1)
		ld	b,9
		call	NAS
		push	hl
		call	DEC16S
		ld	hl,NUM
		ld	de,SPEED
		ldi
		ld	a,46
		ld	(de),a
		inc	de
		ldi
		ldi
		pop	hl
		ld	de,0
		sla	l
		rl	h
		rl	e
		ld	bc,47
		add	hl,bc
		call	DEC32S
		ld	hl,NUM
		ld	de,SPEED+8
		ld	bc,5
		ldir
		ld	de,(KOEF2)
		ld	b,18
		call	NAS
		ld	de,47
		add	hl,de
		call	DEC16S
		ld	hl,NUM
		ld	de,SPEED+14
		ld	bc,5
		ldir
		ld	hl,8*256+31
		ld	de,SPEED
		call	PRINT
		ld	hl,0
		ld	c,8
SRAM0		ld	a,96
		or	c
		out	(23),a
		ld	e,(hl)
		ld	a,e
		cpl
		ld	(hl),a
		cp	(hl)
		jr	nz,SRAM1
		ld	(hl),e
		ld	a,c
		add	a,8
		ld	c,a
		cp	32
		jr	nz,SRAM0
SRAM1		ld	l,c
		add	hl,hl
		add	hl,hl
		add	hl,hl
		add	hl,hl
		ld	a,97
		out	(23),a
		call	DEC16S
		ld	hl,NUM
		ld	de,SRAM+3
		ld	bc,3
		ldir
		ld	a,(MEM128)
		cp	128
		jr	z,SYS_128
		ld	hl,TX_48
		jr	SYS128
SYS_128		ld	hl,TX_128
SYS128		ld	de,SRAM+13
		ld	bc,3
		ldir
		ld	hl,9*256+31
		ld	de,SRAM
		call	PRINT
		ld	de,NONE
		ld	l,0
RTC0		ld	bc,5*256+3
RTC1		in	a,(c)
		and	15
		cp	10
		jr	nc,NORTC
		djnz	RTC1
		dec		l
		jr	nz,RTC0
		ld	de,DET
NORTC		ld	hl,10*256+31
		call	PRINT
		ld	bc,65533
		ld	a,7
		ld	e,63
		out	(c),a
		ld	b,191
		out	(c),e
		ld	b,255
		in	a,(c)
		cp	e
		ld	de,NONE
		jr	nz,NOTAY
		ld	de,DET
NOTAY		ld	hl,11*256+31
		call	PRINT
		ld	ix,DRV1
		ld	hl,12*256+31
		ld	b,4
DRVS		push	bc
		push	hl
		ld	a,(ix+0)
		or	a
		ld	de,NONE
		jr	z,NP
		bit	1,a
		ld	de,DD
		jr	z,NHD
		ld	de,HD
NHD		push	de
		ld	e,(ix+1)
		push	ix
		call	DEC8S
		pop	ix
		pop	de
		ld	a,(NUM)
		ld	(de),a
		inc	de
		ld	a,(NUM+1)
		ld	(de),a
		dec	de
NP		call	PRINT
		pop	hl
		pop	bc
		inc	h
		inc	ix
		inc	ix
		djnz	DRVS
		ld	hl,(VER)
		call	DEC16S
		ld	hl,NUM
		ld	de,VERS
		ldi
		ldi
		ldi
		ld	hl,16*256+31
		ld	de,VERS
		call	PRINT
		pop	de
		pop	hl
		ld	a,120
		call	MENU2
		ld	hl,6*256+26
		ld	de,STEXT1
		call	PRINT
		ld	hl,6*256+26
		ld	a,205
		call	CHAR
		call	AKEY
		call	OUT
		call	PAUSE
		jp	MAIN
PAGE		push	af
		ld	a,%01100000
		or	c
		out	(23),a
		pop	af
		ret
STEXT1		db	" System Info"
		nop
STEXT2		db	"Computer type: "
		nop
		db	"    CPU Speed: "
		nop
		db	"  Memory size: "
		nop
		db	"RTC Processor: "
		nop
		db	" AY Processor: "
		nop
		db	"      Drive 1: "
		nop
		db	"      Drive 2: "
		nop
		db	"      Drive 3: "
		nop
		db	"      Drive 4: "
		nop
		db	"  DOS Version: "
		nop
COMP1		db	"ZX Spectrum/+  "
		db	"     "
		nop
COMP2		db	"ZX Spectrum 128"
		db	"+/+2 "
		nop
COMP3		db	"ZX Spectrum +2A"
		db	"/+3  "
		nop
COMP4		db	"Didaktik M     "
		db	"     "
		nop
DET		db	"Detected       "
		db	"     "
		nop
NONE		db	"None           "
		db	"     "
		nop
SRAM		db	"MB     K, ZX   "
		db	"     "
		nop
SPEED		db	"    Mhz      / "
		db	"     "
		nop
VERS		db	"               "
		db	"     "
		nop
DD		db	"   tracks, DD  "
		db	"     "
		nop
HD		db	"   tracks, HD  "
		db	"     "
		nop
TX_48		db	"48 "
TX_128		db	"128"


PRESS		call	CHANGE
		ld	hl,10*256+8
		ld	de,4*256+16
		call	IN
		exx
		ld	hl,11*256+17
		ld	de,PRTXT
		ld	b,2
		ld	a,31
		call	PMNU
		exx
		ld	a,120
		call	MENU2
		ld	a,#27
		rst	#20			;BSDOS
		call	OUT
		call	REREAD
		jp	MAIN1
PRTXT		db	"     Deflating "
		db	"Directory      "
		nop
		db	"         Please"
		db	" Wait          "
		nop

OZN		ld	bc,(FILE1)
		call	OZNSWAP
		or	a
		jr	z,OZNNE
		ld	hl,(POZICE1)
		call	ADRSET
		call	AAA
		ld	b,14
OZNJO		set	1,(hl)
		inc	l
		djnz	OZNJO
		jp	DOLU
OZNNE		ld	hl,(POZICE1)
		call	ADRSET
		call	AAA
		ld	b,14
OZNN		res	1,(hl)
		inc	l
		djnz	OZNN
		jp	DOLU
OZNCHAN		ld	hl,49152
		ld	ix,57344
		ld	de,8190
OZNCHAN1	ld	a,(hl)
		ex	af,af'
		ld	a,(ix+0)
		ld	(hl),a
		ex	af,af'
		ld	(ix+0),a
		inc	ix
		inc	hl
		dec	de
		ld	a,d
		or	e
		jr	nz,OZNCHAN1
		ret
OZNDEL1		ld	hl,49152
		ld	de,49153
		ld	bc,8189
		ld	(hl),0
		ldir
		ret
OZNDEL2		ld	hl,57344
		ld	de,57345
		ld	bc,8189
		ld	(hl),0
		ldir
		ret
OZNTEST		call	OZNFIND
		or	a
		jr	z,OZNTB0
		ld	a,1
OZNT		sla	a
		djnz	OZNT
		jr	OZNT1
OZNTB0		ld	a,1
OZNT1		ld	b,a
		ld	a,(hl)
		and	b
		ret
OZNSWAP		push	bc
		call	OZNFIND
		or	a
		jr	z,OZNSB0
		ld	a,1
OZNS		sla	a
		djnz	OZNS
		jr	OZNS1
OZNSB0		ld	a,1
OZNS1		ld	b,a
		ld	a,(hl)
		xor	b
		ld	(hl),a
		and	b
		pop	bc
		ret
OZNFIND		ld	d,b
		ld	e,c
		srl	d
		rr	e
		srl	d
		rr	e
		srl	d
		rr	e
		ld	hl,49152
		add	hl,de
		ld	a,c
		and	%111
		ld	b,a
		ret

OZNALL		call	CHANGE
		ld	hl,(LENDIR1)
		ld	a,h
		or	l
		jp	z,MAIN
		ld	hl,10*256+8
		ld	de,5*256+16
		call	IN
		exx
		ld	hl,11*256+17
		ld	de,OZNTXT
		ld	b,3
		ld	a,31
		call	PMNU
		exx
		ld	a,120
		call	MENU2
		ld	bc,1
NXTALL		push	bc
		call	PROZENT
		ld	ix,FASTMEM
		ld	a,#16
		rst	#20			;BSDOS
		jr	z,OUTALL
		pop	bc
		ld	a,(FASTMEM)
		rla
		jr	c,NALL
ZNALL		call	OZNSWAP
		jr	nz,ZNALL
NXALL		inc	bc
		ld	hl,(LENDIR1)
		call	CPHLBC
		jr	nz,NXTALL
		push	bc
OUTALL		pop	bc
		call	OUT
		jp	REREOZN
NALL		call	OZNSWAP
		jr	z,NALL
		jr	NXALL

OZNTXT		db	"      Selecting"
		db	" All Files     "
		nop
		db	"         Please"
		db	" Wait          "
		nop
		db	"               "
		db	"               "
		nop

ODZNALL		call	CHANGE
		call	OZNDEL1
		jp	REREOZN

UZNALL		call	CHANGE
		ld	hl,(LENDIR1)
		ld	a,h
		or	l
		jp	z,MAIN
		ld	hl,10*256+8
		ld	de,5*256+16
		call	IN
		exx
		ld	hl,11*256+17
		ld	de,UZNTXT
		ld	b,3
		ld	a,31
		call	PMNU
		exx
		ld	a,120
		call	MENU2
		ld	bc,1
NXTULL		push	bc
		call	PROZENT
		ld	ix,FASTMEM
		ld	a,#16
		rst	#20			;BSDOS
		jr	z,OUTULL
		pop	bc
		ld	a,(FASTMEM)
		rla
		jr	nc,NULL
		call	OZNSWAP
NXULL		inc	bc
		ld	hl,(LENDIR1)
		call	CPHLBC
		jr	nz,NXTULL
		push	bc
OUTULL		pop	bc
		call	OUT
		jp	REREOZN
NULL		call	OZNSWAP
		or	a
		jr	nz,NULL
		jr	NXULL
UZNTXT		db	"      Changing "
		db	"Selection      "
		nop
		db	"         Please"
		db	" Wait          "
		nop
		db	"               "
		db	"               "
		nop

OZNMASK		call	CHANGE
		call	MASK
		call	CHANGE
		ld	hl,(LENDIR1)
		ld	a,h
		or	l
		jp	z,MAIN
		ld	hl,10*256+8
		ld	de,5*256+16
		call	IN
		exx
		ld	hl,11*256+17
		ld	de,MTXT
		ld	b,3
		ld	a,31
		call	PMNU
		exx
		ld	a,120
		call	MENU2
		ld	bc,1
NXTM		push	bc
		call	PROZENT
		ld	ix,FASTMEM
		ld	a,#16
		rst	#20			;BSDOS
		jr	z,OUTM
		pop	bc
		ld	a,(FASTMEM)
		rla
		jr	nc,NM
		push	bc
		call	SETIN
		ld	de,TEXT
		ld	a,(CR)
		ld	c,a
		or	a
		jr	z,NXM
		call	WILDCHAR
		pop	bc
		jr	nz,NXM
ZNM		call	OZNSWAP
		or	a
		jr	z,ZNM
NXM		inc	bc
		ld	hl,(LENDIR1)
		call	CPHLBC
		jr	nz,NXTM
		push	bc
OUTM		pop	bc
		call	OUT
		jp	REREOZN
NM		call	OZNSWAP
		or	a
		jr	nz,NM
		jr	NXM
MTXT		db	" Selecting Mask"
		db	"ed File Block  "
		nop
		db	"         Please"
		db	" Wait          "
		nop
		db	"               "
		db	"               "
		nop

;de=maska, hl=jmeno
;c=delka masky, b=delka jmena
;out: z =, nz <>
WILDCHAR	inc	c
		inc	b
		ld	a,1
		push	af
		jr	WCST
WCZP		pop	af
		pop	af
		pop	af
WCHVOP2		dec	c
		ret	z
		ld	a,(de)
		inc	de
		cp	'*'
		jr	z,WCHVOP2
		dec	de
		inc	c
WCHVOP		push	bc
WCST		push	hl
		push	de
WCHVOP4		ld	a,(de)
		inc	de
		dec	c
		jr	z,KON5
		cp	'*'
		jr	z,WCZP
		dec	b
		jr	z,KON3
		cp	'?'
		jr	z,WCHVDAL2
		cp	(hl)
WCHVDAL2	inc	hl
		jr	z,WCHVOP4
WCHVZN2		pop	de
		pop	hl
		pop	bc
		inc	hl
		djnz	WCHVOP
		dec	b
		ret
KON3		dec	b
		jr	WCHVZP2
KON5		dec	b
		jr	nz,WCHVZN2
WCHVZP2		pop	hl
		pop	hl
		pop	hl
		ret

SETIN		ld	hl,FASTMEM+16
		ld	a,255
		ld	(FASTMEM+5),a
SETNE		dec	hl
		ld	a,(hl)
		cp	32
		jr	z,NSETHO
		cp	0
		jr	z,NSETHO
		jr	SETHO
NSETHO		cp	255
		jr	nz,SETNE
SETHO		ld	de,FASTMEM+5
		or	a
		sbc	hl,de
		ld	b,l
		ld	hl,FASTMEM+6
		ret

MASK		ld	hl,10*256+8
		ld	de,5*256+16
		call	IN
		exx
		ld	hl,11*256+17
		ld	de,MATXT1
		call	PRINT
		ld	hl,12*256+17
		ld	de,MATXT2
		call	PRINT
		ld	hl,13*256+17
		ld	de,MATXT3
		call	PRINT
		exx
		ld	a,120
		call	MENU2
		ld	hl,13*256+27
		ld	de,8315
		ld	iyl,11
		call	INTXT
		jr	nc,NMASK
		ld	hl,TEXT
		ld	de,FASTMEM+6
		ld	bc,10
		ldir
		call	SETIN
		ld	a,b
		ld	(CR),a
		call	OUT
		ld	de,TEXT
		ld	a,(CR)
		ld	c,a
		ret
CR		nop
NMASK		pop	hl
		call	OUT
		call	PAUSE
		jp	MAIN
MATXT1		db	"         Enter "
		db	"New Mask:      "
		nop
MATXT2		db	"   ( Wildcards "
		db	"Are * And ? )  "
		nop
MATXT3		db	"               "
		db	"               "
		nop

II		call	CHANGE
		call	INFO
		ld	e,1
		ld	a,BDSDDX		;sluzba SDDX
		rst	#20			;BSDOS
		ld	iy,SFIL
		ld	hl,(STO)
		call	DEC16
		ld	iy,SSEC
		ld	hl,(SLEN1)
		ld	de,(SLEN2)
		call	DEC32
		ld	iy,TTOT
		ld	hl,(TLEN1)
		ld	de,(TLEN2)
		call	DEC32
		ld	iy,STOT
		ld	hl,(TOT)
		call	DEC16
		ld	iy,STOI
		ld	hl,(LENDIR1)
		call	DEC16
		ld	a,(PRINTD+1)
		sub	2
		srl	a
		ld	hl,10*256+0
		ld	l,a
		ld	de,7*256+16
		call	IN
		exx
		ld	a,(PRINTD+1)
		ld	hl,11*256+0
		ld	l,a
		ld	de,INFPAN
		ld	b,5
		ld	a,31
		call	PMNU
		exx
		ld	a,120
		call	MENU2
		call	AKEY
		call	OUT
		jp	REREOZN

INFO		ld	hl,0
		ld	(STO),hl
		ld	(TOT),hl
		ld	(SLEN1),hl
		ld	(SLEN2),hl
		ld	(TLEN1),hl
		ld	(TLEN2),hl
		ld	hl,(LENDIR1)
		ld	a,h
		or	l
		ret	z
		ld	hl,10*256+8
		ld	de,5*256+16
		call	IN
		exx
		ld	hl,11*256+17
		ld	de,INFTXT
		ld	b,3
		ld	a,31
		call	PMNU
		exx
		ld	a,120
		call	MENU2
		ld	bc,1
NXTINFO		push	bc
		call	PROZENT
		ld	ix,FASTMEM
		ld	a,#16
		rst	#20			;BSDOS
		jr	z,OUTINFO
		pop	bc
		ld	a,(FASTMEM)
		rla
		jr	nc,NINFO
ZINFO		push	bc
		ld	hl,(TOT)
		inc	hl
		ld	(TOT),hl
		ld	hl,(FASTMEM+#18)
		ld	de,(FASTMEM+#1A)
		ld	a,#0F
		rst	#20			;BSDOS
		ld	hl,(TLEN1)
		ld	de,(TLEN2)
		ld	a,#0A
		rst	#20			;BSDOS
		ld	(TLEN1),hl
		ld	(TLEN2),de
		pop	bc
		push	bc
		call	OZNTEST
		pop	bc
		or	a
		jr	z,NEINCINF
		push	bc
		ld	hl,(STO)
		inc	hl
		ld	(STO),hl
		ld	hl,(FASTMEM+#18)
		ld	de,(FASTMEM+#1A)
		ld	a,#0F
		rst	#20			;BSDOS
		ld	hl,(SLEN1)
		ld	de,(SLEN2)
		ld	a,#0A
		rst	#20			;BSDOS
		ld	(SLEN1),hl
		ld	(SLEN2),de
		pop	bc
NEINCINF		inc	bc
		ld	hl,(LENDIR1)
		call	CPHLBC
		jr	nz,NXTINFO
		push	bc
OUTINFO		pop	bc
		call	OUT
		ret
NINFO		call	OZNSWAP
		jr	nz,NINFO
		jr	NEINCINF
STO		dw	0
TOT		dw	0
SLEN1		dw	0
SLEN2		dw	0
TLEN1		dw	0
TLEN2		dw	0
INFTXT		db	"       Checking"
		db	" files         "
		nop
		db	"         Please"
		db	" Wait          "
		nop
		db	"               "
		db	"               "
		nop
INFPAN		db	" Selected files"
		db	" : "
SFIL		db	"            "
		nop
		db	" Selected kB : "
		db	" "
SSEC		db	"              "
		nop
		db	" Total Items : "
		db	"   "
STOI		db	"            "
		nop
		db	" Existing files"
		db	" : "
STOT		db	"            "
		nop
		db	" Total kB :	"
		db	" "
TTOT		db	"              "
		nop


DELETE		ld	hl,(LENDIR1)
		ld	a,h
		or	l
		jp	z,MAIN
		ld	bc,1
FDEL		push	bc
		call	OZNTEST
		pop	bc
		jr	nz,DELVIC
		inc	bc
		ld	hl,(LENDIR1)
		call	CPHLBC
		jr	nz,FDEL
		jp	DELJEDEN
DELVIC		call	DELREP
		ld	hl,0
		xor	a
		ld	(PROCIS),hl
		ld	(INTFRST),hl
		ld	(INTERVAL),a
		call	CHANGE
		ld	hl,10*256+8
		ld	de,5*256+16
		call	IN
		exx
		ld	hl,11*256+17
		ld	de,DETXT
		ld	b,3
		ld	a,31
		call	PMNU
		exx
		ld	a,120
		call	MENU2
		ld	bc,1
NXTD		push	bc
		call	PROZENT
		ld	ix,FASTMEM
		ld	a,#16
		rst	#20			;BSDOS
		jr	z,OUTD
		pop	bc
		ld	a,(FASTMEM)
		rla
		ld	a,(INTERVAL)
		jr	nc,NDL
		push	bc
		call	OZNTEST
		ld	a,(INTERVAL)
		pop	bc
		jr	z,NDL
		or	a
		jr	nz,ND
		ld	(INTFRST),bc
		inc	a
		ld	(INTERVAL),a
ND		inc	bc
		ld	hl,(LENDIR1)
		call	CPHLBC
		jr	nz,NXTD
		push	bc
OUTD		pop	bc
		ld	a,(INTERVAL)
		or	a
		jr	z,OUTDD
		dec	bc
		ld	h,b
		ld	l,c
		ld	bc,(INTFRST)
		ld	a,#29
		rst	#20			;BSDOS
OUTDD		call	OUT
		call	REREAD
		jp	MAIN1
NDL		or	a
		jr	z,ND
		xor	a
		ld	(INTERVAL),a
		push	bc
		dec	bc
		ld	h,b
		ld	l,c
		ld	bc,(INTFRST)
		ld	a,#29
		rst	#20			;BSDOS
		pop	bc
		jr	ND
INTERVAL	nop
INTFRST		dw	0
PROCIS		dw	0
DETXT		db	"         Deleti"
		db	"ng Files       "
		nop
		db	"         Please"
		db	" Wait          "
		nop
		db	"               "
		db	"               "
		nop

DELJEDEN	ld	bc,(FILE1)
		call	TDEL
		jp	nc,MAIN
		call	DELREP
		call	CHANGE
		ld	bc,(FILE1)
		ld	a,#28
		rst	#20			;BSDOS
		call	REREAD
		jp	MAIN1
DELREP		ld	a,#34
		ld	hl,DELTXT
		rst	#20			;BSDOS
		jr	nc,DELABORT
		ret
DELABORT	pop	hl
		jp	MAIN
DELTXT		db	" Delete it ?  "
		db	#00,#C9

;in:bc-file
;out:je(c)/neni(nc)
;meni:FASTMEM
TDEL		ld	ix,FASTMEM
		ld	a,#16
		rst	#20			;BSDOS
		ld	a,(FASTMEM)
		rla
		ret

UNDELETE	call	CHANGE
		ld	hl,(LENDIR1)
		ld	a,h
		or	l
		jp	z,MAIN
		ld	bc,1
FUNDEL		push	bc
		call	OZNTEST
		pop	bc
		jr	nz,UNVIC
		inc	bc
		ld	hl,(LENDIR1)
		call	CPHLBC
		jr	nz,FUNDEL
		jp	UNJEDEN
UNVIC		ld	hl,0
		xor	a
		ld	(INTFRST),hl
		ld	(INTERVAL),a
		call	CHANGE
		ld	hl,10*256+8
		ld	de,5*256+16
		call	IN
		exx
		ld	hl,11*256+17
		ld	de,UNTXT
		ld	b,3
		ld	a,31
		call	PMNU
		exx
		ld	a,120
		call	MENU2
		ld	bc,1
NXTU		push	bc
		call	PROZENT
		ld	ix,FASTMEM
		ld	a,#16
		rst	#20			;BSDOS
		jr	z,OUTU
		pop	bc
		ld	a,(FASTMEM)
		rla
		ld	a,(INTERVAL)
		jp	c,NUN
		push	bc
		call	OZNTEST
		ld	a,(INTERVAL)
		pop	bc
		jr	z,NUN
		or	a
		jr	nz,NU
		ld	(INTFRST),bc
		inc	a
		ld	(INTERVAL),a
NU		inc	bc
		ld	hl,(LENDIR1)
		call	CPHLBC
		jr	nz,NXTU
		push	bc
OUTU		pop	bc
		ld	a,(INTERVAL)
		or	a
		jr	z,OUTUU
		dec	bc
		ld	h,b
		ld	l,c
		ld	bc,(INTFRST)
		ld	a,#37
		rst	#20			;BSDOS
OUTUU		call	OUT
		call	REREAD
		jp	MAIN1
NUN		or	a
		jr	z,NU
		xor	a
		ld	(INTERVAL),a
		push	bc
		dec	bc
		ld	h,b
		ld	l,c
		ld	bc,(INTFRST)
		ld	a,#37
		rst	#20			;BSDOS
		pop	bc
		jr	NU
UNTXT		db	"        Undelet"
		db	"ing Files      "
		nop
		db	"         Please"
		db	" Wait          "
		nop
		db	"               "
		db	"               "
		nop
UNJEDEN		ld	bc,(FILE1)
		call	TDEL
		jp	c,MAIN
		call	CHANGE
		ld	bc,(FILE1)
		ld	a,#36
		rst	#20			;BSDOS
		call	REREAD
		jp	MAIN1

COPY		call	CHANGE
		ld	hl,(LENDIR1)
		ld	a,h
		or	l
		jp	z,MAIN
		ld	bc,1
FCOP		push	bc
		call	OZNTEST
		pop	bc
		jr	nz,COPVIC
		inc	bc
		ld	hl,(LENDIR1)
		call	CPHLBC
		jr	nz,FCOP
		jp	COPJEDEN
COPVIC		call	CHANGE
		ld	hl,10*256+8
		ld	de,7*256+16
		call	IN
		exx
		ld	hl,11*256+17
		ld	de,COTXT
		ld	b,5
		ld	a,31
		call	PMNU
		exx
		ld	a,120
		call	MENU2
		ld	bc,1
NXTCO		push	bc
		call	PROZENT
		ld	ix,FASTMEM
		ld	a,#16
		rst	#20			;BSDOS
		jr	z,OUTCO
		pop	bc
		ld	a,(FASTMEM)
		rla
		jr	nc,NCOP
		push	bc
		call	OZNTEST
		pop	bc
		jr	z,NCOP
		push	bc
		call	COPFILE
		pop	bc
NCOP		inc	bc
		ld	hl,(LENDIR1)
		call	CPHLBC
		jr	nz,NXTCO
		push	bc
OUTCO		pop	bc
		call	OUT
		jp	PANELY

COTXT		db	"        Copying"
		db	" Files         "
		nop
		db	"         Please"
		db	" Wait          "
		nop
		db	"               "
		db	"               "
		nop
		db	"               "
		db	"               "
		nop
		db	"               "
		db	"               "
		nop

COPJEDEN	ld	bc,(FILE1)
		call	TDEL
		jp	nc,MAIN
		call	CHANGE
		ld	hl,10*256+8
		ld	de,7*256+16
		call	IN
		exx
		ld	hl,11*256+17
		ld	de,COTXT
		ld	b,5
		ld	a,31
		call	PMNU
		exx
		ld	a,120
		call	MENU2
		ld	bc,(FILE1)
		call	COPFILE
		call	OUT
		jp	PANELY

;bc=file number
COPFILE		ld	hl,#3E3
		set	7,(hl)
		push	bc
		ld	hl,FASTMEM+6
		ld	de,NAME
		ld	bc,10
		ldir
		ld	de,NAME
		ld	hl,14*256+29
		call	PRINT
		pop	bc
		call	RESIN
		call	SETDEST
		call	RESOUT
		call	SETSOUR
		ld	a,(FASTMEM)
		bit	5,a
		ret	z
		ld	hl,(FASTMEM+#18)
		ld	de,(FASTMEM+#1A)
		ld	a,#0F
		rst	#20			;BSDOS
		ld	(LENFILE+1),bc
NXBYTE		ld	hl,(#18+FASTMEM)
		ld	de,(#1A+FASTMEM)
		ld	a,h
		or	l
		or	d
		or	e
		jp	z,CLOSE
		ld	a,#08
		rst	#20			;BSDOS
		ld	(FASTMEM+#18),hl
		ld	(FASTMEM+#1A),de
		call	READBYTE
		call	WRITBYTE
		jr	NXBYTE

READBYTE	ld	hl,0
		ld	a,h
		or	l
		jr	z,SEQREAD
SEQREAD1		ld	de,SECTIN
		add	hl,de
		ld	a,(hl)
		ld	(PREDEJ),a
		ld	de,1024
		ld	hl,(READBYTE+1)
		inc	hl
		call	CPHLDE
		jr	z,SEQINSET
SEQIN1		ld	(READBYTE+1),hl
		ret
SEQINSET	ld	hl,0
		jr	SEQIN1

SEQREAD		call	SETSOUR
SEQIN		ld	bc,-1
		inc	bc
		ld	(SEQIN+1),bc
		call	PROFILE
		ld	bc,(SEQIN+1)
		ld	ix,SECTIN
FILENUM		ld	hl,0
		ld	a,#22
		ld	e,1
		rst	#20			;BSDOS

		ld	e,#FF			;nevypinaj motor ani ked nie je mechanika aktivna
		ld	a,FDSETOFF		;sluzba SETOFF
		rst	#18			;FDC BIOS
		
		ld	hl,#3E3
		set	7,(hl)
		ld	hl,(READBYTE+1)
		jr	SEQREAD1

WRITBYTE	ld	hl,0
		ld	de,SECTOUT
		add	hl,de
		ld	a,(PREDEJ)
		ld	(hl),a
		ld	de,1024
		ld	hl,(WRITBYTE+1)
		inc	hl
		call	CPHLDE
		jr	z,SEQOUTST
		ld	(WRITBYTE+1),hl
		ret
SEQOUTST	call	SETDEST
SEQOUT		ld	bc,-1
		inc	bc
		ld	(SEQOUT+1),bc
		ld	ix,SECTOUT
DESTNUM		ld	hl,0
		ld	a,#25
		ld	e,1
		rst	#20			;BSDOS

		ld	e,#FF			;nevypinaj motor ani ked nie je mechanika aktivna
		ld	a,FDSETOFF		;sluzba SETOFF
		rst	#18			;FDC BIOS

		ld	hl,#3E3
		set	7,(hl)
RESOUT1		ld	hl,0
		ld	(WRITBYTE+1),hl
		ld	hl,SECTOUT
		ld	de,SECTOUT+1
		ld	bc,1023
		ld	(hl),0
		ldir
		ret
CLOSE		ld	bc,(SEQIN+1)
		inc	bc
		call	PROFILE
		ld	hl,(WRITBYTE+1)
		ld	a,h
		or	l
		jr	z,CLOSE1
		call	SEQOUTST
CLOSE1		call	SETSOUR
		xor	a
		ld	(#03E3),a
		ret

PREDEJ		nop

SETSOUR		ld	a,(ACTDRV1)
		ld	e,a
		ld	a,#13
		rst	#20			;BSDOS
		ld	a,(ACTDIR1)
		ld	e,a
		ld	a,#14
		rst	#20			;BSDOS
		ld	a,128
		ld	(#03E3),a
		ret
SETDEST		ld	a,(ACTDRV2)
		ld	e,a
		ld	a,#13
		rst	#20			;BSDOS
		ld	a,(ACTDIR2)
		ld	e,a
		ld	a,#14
		rst	#20			;BSDOS
		ld	a,128
		ld	(#03E3),a
		ret

RESIN		ld	(FILENUM+1),bc
		ld	ix,FASTMEM
		ld	a,#16
		rst	#20			;BSDOS
		ld	hl,-1
		ld	(SEQIN+1),hl
		ld	hl,0
		ld	(READBYTE+1),hl
		ret

RESOUT		ld	a,#26
		ld	ix,FASTMEM
		rst	#20			;BSDOS
		jp	nc,DFULL
		ld	(DESTNUM+1),hl
		ld	hl,-1
		ld	(SEQOUT+1),hl
		jp	RESOUT1

DFULL		call	OUT
		jp	PANELY

RENAME		call	CHANGE
		ld	hl,(LENDIR1)
		ld	a,h
		or	l
		jp	z,MAIN
		ld	bc,1
FREN		push	bc
		call	OZNTEST
		pop	bc
		jr	nz,RENVIC
		inc	bc
		ld	hl,(LENDIR1)
		call	CPHLBC
		jr	nz,FREN
		jp	RENJEDEN
RENVIC		call	CHANGE
		ld	bc,1
NXTRN		push	bc
;		call PROZENT
		ld	ix,FASTMEM
		ld	a,#16
		rst	#20			;BSDOS
		jr	z,OUTRN
		pop	bc
		ld	a,(FASTMEM)
		rla
		jr	nc,NREN
		push	bc
		call	OZNTEST
		pop	bc
		jr	z,NREN
		push	bc
		call	RENAM
		pop	bc
NREN		inc	bc
		ld	hl,(LENDIR1)
		call	CPHLBC
		jr	nz,NXTRN
		push	bc
OUTRN		pop	bc
		jp	PANELY
RENJEDEN	ld	bc,(FILE1)
		call	TDEL
		jp	nc,MAIN
		call	CHANGE
		ld	bc,(FILE1)
		call	RENAM
		call	OUT
		jp	PANELY

RENAM		ld	hl,FASTMEM+#06
		ld	de,NAME
		ld	(REX+1),bc
		ld	bc,10
		ldir
		ld	hl,10*256+8
		ld	de,4*256+16
		call	IN
		exx
		ld	hl,11*256+17
		ld	de,RNTXT1
		call	PRINT
		ld	hl,11*256+35
		ld	de,NAME
		call	PRINT
		ld	hl,12*256+17
		ld	de,RNTXT2
		call	PRINT
		exx
		ld	a,120
		call	MENU2
		ld	hl,10*256+26
		ld	de,RNTXT3
		call	PRINT
		ld	hl,10*256+37
		ld	a,205
		call	CHAR
		ld	hl,12*256+35
		ld	de,8315
		ld	iyl,11
		call	INTXT
		jr	nc,RNB
		ld	hl,TEXT
		ld	de,FASTMEM+#06
		ld	bc,10
		ldir
REX		ld	hl,0
		ld	ix,FASTMEM
		ld	a,#1B
		rst	#20			;BSDOS
RNB		call	OUT
		ret
RNTXT1		db	" Old name of fi"
		db	"le:"
		nop
RNTXT2		db	" Enter new name"
		db	":             "
		nop
RNTXT3		db	"File Rename"
		nop


VIEW		ld	bc,(FILE1)
		call	TDEL
		jp	nc,MAIN
		call	CHANGE
		call	VPOZADI
		ld	bc,(FILE1)
		ld	ix,FASTMEM
		ld	a,#16
		rst	#20			;BSDOS
;getsub
		jp	z,OUTV
		ld	de,(FASTMEM+#1A)
		ld	hl,(FASTMEM+#18)
		ld	a,#0F
		rst	#20			;BSDOS
		ld	(LENSEC),bc
		ld	e,1
		ld	a,BDSDDX		;sluzba SDDX
		rst	#20			;BSDOS
		ld	hl,(LENSEC)
		ld	iy,VTXT1
		call	DEC16
		ld	hl,(FASTMEM+#16)
		ld	iy,NUMBER
		call	DEC16
		ld	hl,14
		ld	de,NUMBER
		call	PRINT
		ld	e,1
		ld	a,BDSDDX		;sluzba SDDX
		rst	#20			;BSDOS
		ld	de,(FASTMEM+#1A)
		ld	hl,(FASTMEM+#18)
		ld	iy,NUMBER32
		call	DEC32
		ld	hl,20
		ld	de,NUMBER32
		call	PRINT
		xor	a
		ld	(FASTMEM+16),a
		ld	hl,3
		ld	de,FASTMEM+6
		call	PRINT
		ld	a,(FASTMEM+5)
		add	a,48
		ld	(ZNK),a
		ld	hl,1
		call	PRD
		ld	bc,0
		ld	(POCSEC),bc
VIEW1		ld	hl,BOOT
		ld	de,BOOT+1
		ld	bc,1023
		ld	(hl),0
		ldir
		ld	hl,(FILE1)
		ld	ix,BOOT
		ld	bc,(POCSEC)
		ld	e,1
		ld	a,#22
		rst	#20			;BSDOS
		ld	e,1
		ld	a,BDSDDX		;sluzba SDDX
		rst	#20			;BSDOS
		ld	hl,(POCSEC)
		inc	hl
		ld	iy,VTXT2
		call	DEC16
		ld	hl,256*23+1
		ld	de,VTXT
		call	PRINT
		call	VIEWP
VIEW0		call	ESCAPE
		jr	nc,OUTV
		call	KEY
		cp	11
		jr	z,VUP
		cp	10
		jr	z,VDO
		cp	8
		jr	z,VSEC0
		cp	9
		jr	z,VSECL
		jr	VIEW0
OUTV		ld	sp,(PANELY+1)
		jp	PANELY1

VDO		ld	bc,(POCSEC)
		ld	hl,(LENSEC)
		dec	hl
		call	CPHLBC
		jr	z,VIEW0
		inc	bc
		jr	VVV
VUP		ld	bc,(POCSEC)
		ld	a,b
		or	c
		jr	z,VIEW0
		dec	bc
VVV		ld	(POCSEC),bc
		jp	VIEW1
VSEC0		ld	bc,(POCSEC)
		ld	a,b
		or	c
		jr	z,VIEW0
		ld	bc,0
		jr	VVV
VSECL		ld	bc,(POCSEC)
		ld	hl,(LENSEC)
		dec	hl
		call	CPHLBC
		jr	z,VIEW0
		ld	bc,(LENSEC)
		dec	bc
		jr	VVV

VPOZADI		ld	hl,16384
		ld	de,16385
		ld	bc,6143
		ld	(hl),0
		ldir
		ld	hl,22528+32
		ld	de,22528+33
		ld	bc,767-64
		ld	(hl),%1101000
		ldir
		ld	hl,22528+32
		ld	de,22528+33
		ld	bc,32
		ld	(hl),7
		ldir
		ld	bc,63
		ld	(hl),%1001111
		ldir
		ld	hl,23296-128
		ld	de,23296-127
		ld	bc,64
		ld	(hl),%1001111
		ldir
		ld	bc,31
		ld	(hl),7
		ldir
		ret
VIEWP		ld	hl,BOOT
		ld	(PVV),hl
		ld	bc,1024
		ld	hl,256*4+0
NVV		ld	(SVV),hl
		ld	hl,(PVV)
		ld	a,(hl)
		cp	32
		jr	nc,NV
		ld	a,'.'
NV		inc	hl
		ld	(PVV),hl
		ld	hl,(SVV)
		ld	(SV),bc
		call	CHAR
		ld	bc,(SV)
		dec	bc
		ld	a,b
		or	c
		ret	z
		inc	l
		ld	a,l
		cp	64
		jr	c,NVV
		ld	l,0
		inc	h
		jr	NVV
PVV		dw	0
SVV		dw	0
SV		dw	0

VTXT		db	"Sector:"
VTXT2		db	"      of "
VTXT1		db	"     "
		nop
LENSEC		dw	0
POCSEC		dw	0
PRD		ld	de,ZNK
		jp	PRINT
ZNK		nop
		nop

PROZENT		push	hl
		push	de
		push	bc
		ld	e,1
		ld	a,BDSDDX		;sluzba SDDX
		rst	#20			;BSDOS
		ld	hl,(LENDIR1)
		pop	bc
		push	bc
		call	PROCALC
		ld	l,24
		ld	h,13
		ld	de,PROZ
		call	PRINT
		pop	bc
		pop	de
		pop	hl
		ret

PROFILE		push	hl
		push	de
		push	bc
		ld	e,1
		ld	a,BDSDDX		;sluzba SDDX
		rst	#20			;BSDOS
LENFILE		ld	hl,0
		pop	bc
		push	bc
		call	PROCALC
		ld	l,24
		ld	h,15
		ld	de,PROZ
		call	PRINT
		pop	bc
		pop	de
		pop	hl
		ret

PROCALC		ld	a,h
		or	a
		jr	nz,VELFILE
		ld	a,16
		cp	l
		jr	c,VELFILE
		push	bc
		ld	d,h
		ld	e,l
		ld	hl,16
		call	LOM
		ld	a,l
		or	a
		jr	nz,MALNUL
		ld	a,1
MALNUL		pop	bc
		ld	b,a
		xor	a
MALNUL1		add	a,c
		djnz	MALNUL1
		ld	b,a
		jr	PROW
VELFILE		srl	h
		rr	l
		srl	h
		rr	l
		srl	h
		rr	l
		srl	h
		rr	l
		ld	d,h
		ld	e,l
		ld	h,b
		ld	l,c
		call	LOM
		ld	b,l
		ld	a,16
		cp	b
		jr	nc,PROW
		ld	b,16
PROW		ld	hl,PROZ
		inc	b
		ld	c,17
PROX		ld	(hl),176
		inc	hl
		dec	c
		ld	a,c
		or	a
		jr	nz,PROX
		ld	hl,PROZ
PROY		ld	(hl),219
		inc	hl
		djnz	PROY
		ret

REDISK		call	CHANGE
REDISKY		ld	a,#12
		rst	#20			;BSDOS
		call	AKTIVE
		or	a
		jp	z,RDB
		cp	1
		jr	z,REDISKY
		ld	de,1
		ld	hl,BOOT
		call	RDSEC
		or	a
		jp	z,RDB
		cp	1
		jr	z,REDISKY
		ld	a,#0D
		rst	#18			;FDC BIOS
		ld	hl,BOOT+#26
		ld	de,NAME
		ld	bc,10
		ldir
		ld	hl,10*256+8
		ld	de,4*256+16
		call	IN
		exx
		ld	hl,11*256+17
		ld	de,RDTXT1
		call	PRINT
		ld	hl,11*256+35
		ld	de,NAME
		call	PRINT
		ld	hl,12*256+17
		ld	de,RDTXT2
		call	PRINT
		exx
		ld	a,120
		call	MENU2
		ld	hl,10*256+26
		ld	de,RDTXT3
		call	PRINT
		ld	hl,10*256+37
		ld	a,205
		call	CHAR
		ld	hl,12*256+35
		ld	de,8315
		ld	iyl,11
		call	INTXT
		jr	nc,RDB
		ld	hl,TEXT
		ld	de,BOOT+#26
		ld	bc,10
		ldir
REDISKX		ld	a,#12
		rst	#20			;BSDOS
		call	AKTIVE
		or	a
		jr	z,RDB
		cp	1
		jr	z,REDISKX
		ld	de,1
		ld	hl,BOOT
		call	WRSEC
		or	a
		jr	z,RDB
		cp	1
		jr	z,REDISKX
		ld	a,#0D
		rst	#18			;FDC BIOS
RDB		call	OUT
		jp	MAIN
RDTXT1		db	" Old name of di"
		db	"sk:"
		nop
RDTXT2		db	" Enter new name"
		db	":             "
		nop
RDTXT3		db	"Rename Disk"
		nop

SETTIME		ld	hl,10*256+7
		ld	de,3*256+18
		call	IN
		exx
		ld	hl,11*256+15
		ld	de,STTXT2
		call	PRINT
		exx
		ld	a,120
		call	MENU2
		ld	hl,10*256+28
		ld	de,STTXT1
		call	PRINT
		ld	hl,11*256+41
		ld	de,12346
		ld	iyl,7
		call	INTXT
		jr	nc,BP
		ld	hl,TEXT
		ld	ix,RNG
		ld	b,6
RERNG		ld	a,(hl)
		cp	(ix+0)
		jr	nc,ITIME
		sub	48
		ld	(hl),a
		inc	l
		inc	ix
		djnz	RERNG
		ld	bc,15*256+3
		ld	a,7
		out	(c),a
		ld	hl,TEXT
		ld	b,6
		otir
		ld	b,15
		ld	a,4
		out	(c),a
		ld	b,13
		db	#ED,#71
;out (c),0
BP		call	OUT
		jp	MAIN
ITIME		call	OUT
		ld	hl,ITT
		ld	a,#34
		rst	#20			;BSDOS
		call	PAUSE
		jp	c,SETTIME
		jp	MAIN
RNG		db	51,58,54,58,54,58
STTXT1		db	"Set Time"
		nop
STTXT2		db	" Enter new time"
		db	" (hhmmss):     "
		db	"    "
		nop
ITT		db	"Bad string. Aga"
		db	"in ?"
		db	#00,#C9


;Podprogram pre obsluhu klavesnice
;klasicky INKEY$ zavisly od ZX ROM!
;output: a=stlacena klavesa
KEY:		call	ROMDIS			;odstrankujeme do ROM
		ld	iy,39
		call	654			;#028e
		ret	nz
		call	798			;#031e
		ret	nc
		dec	d
		ld	e,a
		call	819			;#0333
		jp	DOSENA			;navrat s prestrankovanim do DOSu

AKEY		call	KEY
		cp	13
		ret	z
		call	ESCAPE
		ret	nc
		jr	AKEY
ESCAPE		ld	a,247
		in	a,(254)
		rra
		ret	c
		ld	a,254
		in	a,(254)
		rra
		ret
PAUSE		ld	b,5
		ei
PAUSE0		halt
		djnz	PAUSE0
		ret
CPHLDE		or	a
		sbc	hl,de
		add	hl,de
		ret
CPHLBC		or	a
		sbc	hl,bc
		add	hl,bc
		ret

MOD		ld	a,h
		ld	c,l
		ld	hl,0
		ld	b,16
MOD2		sll	c
		rla
		adc	hl,hl
		sbc	hl,de
		jr	nc,MOD1
		add	hl,de
		dec	c
MOD1		djnz	MOD2
		ret

LOM		call	MOD
		ld	h,a
		ld	l,c
		ret

KRAT		ld	b,16
		ld	a,h
		ld	c,l
		ld	hl,0
KRAT2		add	hl,hl
		rl	c
		rla
		jr	nc,KRAT1
		add	hl,de
KRAT1		djnz	KRAT2
		ret
NAS		ld	hl,0
NAS0		add	hl,de
		djnz	NAS0
		ret
DEC8S		ld	ix,NUM
		ld	(#03E0),ix
		ld	c,0
		ld	a,#05
		rst	#20			;BSDOS
		xor	a
		ld	(NUM+3),a
		ret
DEC16S		ld	ix,NUM
		ld	(#03E0),ix
		ld	c,0
		ld	a,#06
		rst	#20			;BSDOS
		xor	a
		ld	(NUM+5),a
		ret
DEC32S		ld	ix,NUM
		ld	(#03E0),ix
		ld	c,0
		ld	b,5
		ld	a,#07
		rst	#20			;BSDOS
		xor	a
		ld	(NUM+5),a
		ret

;BSDOS #DEC8X
;input: iy=adresa bufferu s textom
DEC8:		ld	c,' '			;medzera namiesto nevyznamnych uvodnych nul
		ld	(#03E0),iy		;adresa bufferu do systemovej premennej XXX
		ld	a,#05			;sluzba DEC8X - Vypisuje osembitove desiatkove cislo
		rst	#20			;BSDOS
		ret

;BSDOS #DEC16X
;input: iy=adresa bufferu s textom
DEC16:		ld	c,' '			;medzera namiesto nevyznamnych uvodnych nul			
		ld	(#03E0),iy		;adresa bufferu do systemovej premennej XXX
		ld	a,#06			;sluzba DEC16X - vypisuje 16-bitove desiatkove cislo
		rst	#20			;BSDOS
		ret

;BSDOS #DEC32X
;iput: iy=adresa bufferu s textom
DEC32:		ld	c,' '			;medzera namiesto nevyznamnych uvodnych nul
		ld	(#03E0),iy		;adresa bufferu do systemovej premennej XXX
		ld	b,7			;vypiseme maximalne 7 znakov
		ld	a,#07			;sluzba DEC32X - vypisuje 32-bitove desiatkove cislo
		rst	#20			;BSDOS
		ret

;ix=cislo
;nc=overflow
A2N		ld	hl,TEXT
		ld	bc,6
		ld	a,32
		ld	e,255
A2N0		inc	e
		cpi
		jr	nz,A2N0
		ld	c,e
		ld	ix,0
		dec	hl
		dec	hl
		ld	de,1
XCV0		ex	af,af'
		ld	a,(hl)
		sub	48
		or	a
		jr	z,XCV2
		ld	b,a
		ex	af,af'
XCV1		add	ix,de
		jp	c,NOVAL
		djnz	XCV1
XCV2		push	bc
		ex	de,hl
		sla	l
		rl	h
		push	hl
		sla	l
		rl	h
		sla	l
		rl	h
		pop	bc
		add	hl,bc
		ex	de,hl
		pop	bc
		dec	hl
		dec	c
		jr	nz,XCV0
		scf
		ret
NOVAL		or	a
		ret

;hl=pozice kurzoru
;d=prvni testovany znak
;e=posledni testovany znak
;de=8315 (all), de=12346 (num)
;iyl=max. pocet znaku+1
;nc=break
INTXT		ld	(POS),hl
		ld	a,d
		ld	(ZNAK1+1),a
		ld	a,e
		ld	(ZNAK2+1),a
		push	hl
		push	de
		push	bc
		push	af
		ld	b,iyl
		ld	hl,TEXT
INTXT0		ld	(hl),32
		inc	l
		djnz	INTXT0
		ld	(hl),b
		pop	af
		pop	bc
		pop	de
		pop	hl
		push	hl
		call	ADRSET
		call	AAA
		ld	b,iyl
		srl	b
		inc	b
INTXT00		ld	(hl),40
		inc	l
		djnz	INTXT00
		ld	ix,TEXT
		pop	hl
		ld	a,254
		call	CHAR
INTXT1		call	ESCAPE
		jp	nc,BRK
		push	hl
		push	iy
		call	KEY
		pop	iy
		pop	hl
		cp	39
		jr	z,INTXT1
		cp	12
		jp	z,DEL
		cp	13
		jp	z,ETR
ZNAK1		cp	32
		jr	c,INTXT1
ZNAK2		cp	123
		jr	nc,INTXT1
		ex	af,af'
		ld	a,xh
		ld	yh,a
		ld	a,(iy-2)
		cp	32
		jp	nz,INTXT1
		ld	a,yl
		dec	a
		cp	xl
		jp	z,INTXT1
		push	hl
		push	de
		push	bc
		push	af
		ld	a,yl
		dec	a
		sub	xl
		ld	b,0
		ld	c,a
		ld	d,TEXT/256
		ld	a,yl
		dec	a
		ld	e,a
		ld	h,d
		ld	l,e
		dec	l
		lddr
		ldd
		ex	af,af'
		ld	(ix+0),a
		ld	hl,(POS)
		ld	de,TEXT
		call	REMOV2
		call	PRINT
		inc	ixl
		pop	af
		pop	bc
		pop	de
		pop	hl

		inc	l
		ld	a,254
		call	CHAR
		call	PAUSE
		jr	INTXT1
DEL		ld	a,xl
		or	a
		jp	z,INTXT1
		push	hl
		push	de
		push	bc
		push	af
		push	ix
		pop	hl
		ld	d,h
		ld	e,l
		dec	e
		ld	a,yl
		sub	xl
		ld	b,0
		ld	c,a
		ldir
		dec	l
		ld	(hl),32
		dec	xl
		ld	hl,(POS)
		ld	de,TEXT
		call	REMOV2
		call	PRINT
		pop	af
		pop	bc
		pop	de
		pop	hl
		dec	l
		ld	a,254
		call	CHAR
		call	PAUSE
		jp	INTXT1
ETR		scf
		ret
BRK		or	a
		ret
REMOV		push	hl
		call	ADRSET
		ld	a,h
		add	a,7
		ld	h,a
		ld	(hl),0
		pop	hl
		ret
REMOV2		push	hl
		call	ADRSET
		ld	b,8
REMOV20		ld	(hl),0
		inc	h
		djnz	REMOV20
		pop	hl
		ret

;hl=zacatek inv. oblasti
;a=delka inv. oblasti(0-63)
INV		push	hl
		ld	b,a
INV0		push	bc
		call	INV1
		inc	l
		pop	bc
		djnz	INV0
		pop	hl
		ret
INV1		push	hl
		call	ADRSET
		or	a
		jr	nz,SCND
		ld	b,8
I0		ld	a,(hl)
		xor	%00001111
		ld	(hl),a
		inc	h
		djnz	I0
		pop	hl
		ret
SCND		ld	b,8
I1		ld	a,(hl)
		xor	%11110000
		ld	(hl),a
		inc	h
		djnz	I1
		pop	hl
		ret

;hl=umisteni
;de=rozmery
IN		push	hl
		push	de
		ld	a,l
		add	a,a
		ld	l,a
		call	ADRSET
		ld	(OUT+1),hl
		ld	a,d
		ld	(LOP2-1),a
		ld	(LOP4-1),a
		or	a
		rla
		rla
		rla
		ld	(LOP3-1),a
		ld	b,a
		ld	a,e
		ld	(RANG1+1),a
		ld	(RANG2+1),a
		ld	(RANG3+1),a
		ld	(LOP4+1),a
		ld	a,32
		sub	e
		ld	(ADDED1+1),a
		ld	(ADDED2+1),a
		push	hl
		ld	de,STORE
LOP1		push	bc
		push	hl
RANG1		ld	bc,0
		ldir
		pop	hl
		call	DOWNHL
		pop	bc
		djnz	LOP1
		pop	hl
		call	AAA
		ld	b,0
LOP2		push	bc
RANG2		ld	bc,0
		ldir
ADDED1		ld	bc,0
		add	hl,bc
		pop	bc
		djnz	LOP2
		pop	de
		pop	hl
		ret

OUT		ld	de,0
		ld	hl,STORE
		push	de
		ld	b,0
LOP3		push	bc
		push	de
RANG3		ld	bc,0
		ldir
		pop	de
		ex	de,hl
		call	DOWNHL
		ex	de,hl
		pop	bc
		djnz	LOP3
		pop	de
		ex	de,hl
		call	AAA
		ex	de,hl
		ld	a,0
LOP4		ld	bc,0
		ldir
ADDED2		ld	bc,0
		ex	de,hl
		add	hl,bc
		ex	de,hl
		dec	a
		jr	nz,LOP4
		ret

DOWNHL		inc	h
		ld	a,h
		and	7
		ret	nz
		ld	a,l
		add	a,32
		ld	l,a
		ret	c
		ld	a,h
		sub	8
		ld	h,a
		ret

;Vypocet adresy atributu pod pixelovou adresou
;hl=pixelova adresa
AAA:		ld	a,h
		rrca
		rrca
		rrca
		xor	80
		ld	h,a
		ret

LINE1		ld	b,a
LINE0		ld	a,196
		push	bc
		call	CHAR
		pop	bc
		inc	l
		djnz	LINE0
		ret

;hl=umisteni
;de=rozmery
MENU1		push	hl
		push	de
		ld	a,l
		add	a,a
		ld	l,a
		push	hl
		call	ADRSET
		call	AAA
		ld	b,d
		ld	a,e
		ld	(SIRKA+1),a
LP1		push	bc
		push	hl
SIRKA		ld	b,0
LP2		ld	(hl),48
		inc	l
		djnz	LP2
		pop	hl
		ld	bc,32
		add	hl,bc
		pop	bc
		djnz	LP1
		pop	hl
		push	hl
		ld	a,218
		push	de
		push	de
		call	CHAR
		pop	de
		inc	l
		ld	a,e
		add	a,a
		sub	2
		call	LINE1
		ld	a,191
		call	CHAR
		pop	de
		pop	hl
		inc	h
		push	de
		dec	d
		dec	d
		ld	b,d
		ld	a,e
		add	a,a
		dec	a
		ld	(PRICTI+1),a
LPP1		ld	a,242
		push	hl
		push	bc
		call	CHAR
		ld	a,l
PRICTI		add	a,0
		ld	l,a
		ld	a,179
		call	CHAR
		pop	bc
		pop	hl
		inc	h
		djnz	LPP1
		ld	a,192
		call	CHAR
		inc	l
		pop	de
		ld	a,e
		add	a,a
		sub	2
		call	LINE1
		ld	a,217
		call	CHAR
		pop	de
		pop	hl
		ret
;hl=umisteni
;de=rozmery
;a=atribut
MENU2		ld	(LLP2+1),a
		ld	a,l
		add	a,a
		ld	l,a
		push	hl
		call	ADRSET
		call	AAA
		ld	b,d
		ld	a,e
		ld	(LSIRKA+1),a
LLP1		push	bc
		push	hl
LSIRKA		ld	b,0
LLP2		ld	(hl),0
		inc	l
		djnz	LLP2
		pop	hl
		ld	bc,32
		add	hl,bc
		pop	bc
		djnz	LLP1
		pop	hl
		push	hl
		ld	a,201
		push	de
		push	de
		call	CHAR
		pop	de
		inc	l
		ld	a,e
		add	a,a
		sub	2
		call	LINE2
		ld	a,187
		call	CHAR
		pop	de
		pop	hl
		inc	h
		push	de
		dec	d
		dec	d
		ld	b,d
		ld	a,e
		add	a,a
		dec	a
		ld	(LPRICTI+1),a
LLPP1		ld	a,247
		push	hl
		push	bc
		call	CHAR
		ld	a,l
LPRICTI		add	a,0
		ld	l,a
		ld	a,186
		call	CHAR
		pop	bc
		pop	hl
		inc	h
		djnz	LLPP1
		ld	a,200
		call	CHAR
		inc	l
		pop	de
		ld	a,e
		add	a,a
		sub	2
		call	LINE2
		ld	a,188
		call	CHAR
		ret
LINE2		ld	b,a
LINE00		ld	a,205
		push	bc
		call	CHAR
		pop	bc
		inc	l
		djnz	LINE00
		ret

;Tlac textu, 64 znakov na riadok
;input:	hl=pozicia (h=riadok, l=stlpec)
;	de=adresa textu
PRINT:		ld	a,(de)
		or	a
		ret	z
		call	CHAR
		inc	de
		inc	l
		ld	a,l
		cp	64
		jr	c,PRINT
		ld	l,0
		inc	h
		jr	PRINT

;Tlac znaku, 64 znakov na riadok
;input:	hl=pozicia (h=riadok, l=stlpec)
;	a=kod znaku
CHAR:		push	bc
		push	de
		push	hl
		push	af
		call	ADRSET
		or	a
		jr	z,SECND2
		ld	c,#F0
		jr	SECND1
SECND2:		ld	c,#0F
SECND1:		pop	af
		ex	de,hl
		ld	l,a
		ld	h,0
		add	hl,hl
		add	hl,hl
		add	hl,hl
		push	bc
		ld	bc,FONT-256
		add	hl,bc
		pop	bc
		ex	de,hl

		ld	b,(hl)
		ld	a,c
		cpl
		and	b
		ld	(hl),a
		ld	a,(de)
		and	c
		or	(hl)
		ld	(hl),a

		inc	de
		inc	h

		ld	b,(hl)
		ld	a,c
		cpl
		and	b
		ld	(hl),a
		ld	a,(de)
		and	c
		or	(hl)
		ld	(hl),a

		inc	de
		inc	h

		ld	b,(hl)
		ld	a,c
		cpl
		and	b
		ld	(hl),a
		ld	a,(de)
		and	c
		or	(hl)
		ld	(hl),a

		inc	de
		inc	h

		ld	b,(hl)
		ld	a,c
		cpl
		and	b
		ld	(hl),a
		ld	a,(de)
		and	c
		or	(hl)
		ld	(hl),a

		inc	de
		inc	h

		ld	b,(hl)
		ld	a,c
		cpl
		and	b
		ld	(hl),a
		ld	a,(de)
		and	c
		or	(hl)
		ld	(hl),a

		inc	de
		inc	h

		ld	b,(hl)
		ld	a,c
		cpl
		and	b
		ld	(hl),a
		ld	a,(de)
		and	c
		or	(hl)
		ld	(hl),a

		inc	de
		inc	h

		ld	b,(hl)
		ld	a,c
		cpl
		and	b
		ld	(hl),a
		ld	a,(de)
		and	c
		or	(hl)
		ld	(hl),a

		inc	de
		inc	h

		ld	b,(hl)
		ld	a,c
		cpl
		and	b
		ld	(hl),a
		ld	a,(de)
		and	c
		or	(hl)
		ld	(hl),a

		pop	hl
		pop	de
		pop	bc
		ret

;Vypocet adresy
;input: hl=pozicia (h=riadky 0-23, l=stlpce 0-63)
ADRSET:		ld	a,h
		push	hl
		and	%00011000
		or	%01000000
		ld	l,0
		rr	h
		rr	l
		rr	h
		rr	l
		rr	h
		rr	l
		ld	h,a
		pop	bc
		bit	0,c
		jr	nz,MODIFY
		ld	a,1
CONT:		srl	c
		ld	b,0
		add	hl,bc
		ret
MODIFY:		xor	a
		jr	CONT

;a=0 abort
;a=1 znovu aktivuj
;a=2 ok, nevymenena disketa
;a=3 ok, vymenena disketa
AKTIVE		di
		ld	a,#0C
		rst	#18			;FDC BIOS
		ei
		cp	1
		ret	nz
		ld	(BIOS),a
		ld	hl,DNREADY
		ld	a,#34
		rst	#20			;BSDOS
		jr	c,AKTMX
		xor	a
		ret
AKTMX		ld	a,1
		ret
;a=0 abort
;a=1 znovu nacitej
;a=2 ok
RDSEC		di
		ld	a,#04
		rst	#18			;FDC BIOS
		ei
		rra
		ld	hl,TIMEOUT
		jr	c,RWSE
		rra
		ld	hl,DNREADY
		jr	c,RWSE
		rra
		ld	hl,DLOST
		jr	c,RWSE
		rra
		ld	hl,CRC
		jr	c,RWSE
		rra
		ld	hl,RECORD
		jr	c,RWSE
		rra
		ld	hl,BREAK
		jr	c,RWSE
		bit	7,a
		ld	hl,NREADY
		jr	nz,RWSE
		ld	a,#0D
		rst	#18			;FDC BIOS
;passive
		ld	a,2
		ret
;a=0 abort
;a=1 znovu zapisuj
;a=2 ok
WRSEC		ld	a,#05
		rst	#18			;FDC BIOS
		rra
		ld	hl,TIMEOUT
		jr	c,RWSE
		rra
		ld	hl,DNREADY
		jr	c,RWSE
		rra
		ld	hl,DLOST
		jr	c,RWSE
		rra
		rra
		ld	hl,RECORD
		jr	c,RWSE
		rra
		ld	hl,BREAK
		jr	c,RWSE
		rra
		ld	hl,WRITE
		jr	c,RWSE
		rra
		ld	hl,NREADY
		jr	c,RWSE
		ld	a,#0D
		rst	#18			;FDC BIOS
;passive
		ld	a,2
		ret
RWSE		push	hl
		ld	a,#0D
		rst	#18			;FDC BIOS
		pop	hl
		ld	a,1
		ld	(BIOS),a
		ld	a,#34
		rst	#20			;BSDOS
		jr	c,RWSEX
		xor	a
		ret
RWSEX		ld	a,1
		ret

TIMEOUT		db	"Time out"
		db	#00,#C9
DNREADY		db	"Disk not ready"
		db	#00,#C9
DLOST		db	"Data lost"
		db	#00,#C9
CRC		db	"CRC error"
		db	#00,#C9
RECORD		db	"Record not foun"
		db	"d"
		db	#00,#C9
BREAK		db	"Break"
		db	#00,#C9
WRITE		db	"Write protect"
		db	#00,#C9
NREADY		db	"Ready error"
		db	#00,#C9

MSG		ld	(MSGSP1),sp
		ld	sp,MSGSP2+80
		call	TO
		call	PAUSE
		ld	hl,(MSGB)
		ld	bc,28
		xor	a
		cpir
		srl	c
		ld	a,20
		add	a,c
		ld	l,a
		ld	de,(MSGB)
		ld	h,11
		call	PRINT
		ld	de,MSGT1
		ld	hl,12*256+24
		call	PRINT
		ld	hl,(MSGB)
		ld	de,67
		add	hl,de
		ld	a,(hl)
		cp	77
		jr	z,CO
BIOE		ld	hl,10*256+35
		push	hl
		ld	de,ERROR
		ld	hl,10*256+30
		ld	a,16
DALE		exx
		ld	hl,10*256+9
		ld	de,4*256+15
		call	MENU2
		exx
		call	PRINT
		pop	hl
		ld	a,205
		call	CHAR
		ld	hl,12*256+23
		call	YC
		push	af
		call	FROM
		xor	a
		ld	(BIOS),a
		pop	af
		ld	sp,(MSGSP1)
		ret

CO		ld	a,(BIOS)
		or	a
		jr	nz,BIOE
		ld	hl,10*256+37
		push	hl
		ld	de,CONFIRM
		ld	hl,10*256+30
		ld	a,56
		jr	DALE

MSGT1		db	"OK/Rtr      Can"
		db	"cel"
		nop
CONFIRM		db	"Confirm"
		nop
ERROR		db	"Error"
		nop

TO		ld	hl,18505
		ld	de,MSGST
		ld	a,32
TO0		push	hl
		ld	bc,15
TO1		ldi
		dec	hl
		ld	(hl),b
		inc	hl
		jp	pe,TO1
		pop	hl
		ex	af,af'
		call	DOWNHL
		ex	af,af'
		dec	a
		jr	nz,TO0
		ld	hl,22857
		ld	de,MSGST+480
		ld	c,4
TO2		ld	b,15
TO3		ld	a,(hl)
		ld	(de),a
		inc	de
		inc	l
		djnz	TO3
		push	de
		ld	de,17
		add	hl,de
		pop	de
		dec	c
		jr	nz,TO2
		ret

FROM		ld	hl,MSGST
		ld	de,18505
		ld	b,32
FROM0		push	bc
		push	de
		ld	bc,15
		ldir
		pop	de
		ex	de,hl
		call	DOWNHL
		ex	de,hl
		pop	bc
		djnz	FROM0
		ld	hl,22857
		ld	de,MSGST+480
		ld	c,4
FROM1		ld	b,15
FROM2		ld	a,(de)
		ld	(hl),a
		inc	de
		inc	l
		djnz	FROM2
		push	de
		ld	de,17
		add	hl,de
		pop	de
		dec	c
		jr	nz,FROM1
		ret

;hl=pozice
;c=Ok/Rtr
;nc=Cancel/Break
YC		ld	a,8
		call	INV
		ld	a,l
		ld	(LR+2),a
		ld	(LRP+1),a
		add	a,12
		ld	(LRQ+1),a
YC1		push	hl
		call	KEY
		pop	hl
		cp	8
		call	z,LR
		cp	9
		call	z,LR
		cp	13
		jr	z,QD
		call	ESCAPE
		jr	nc,BCK
		jr	YC1

LR		ld	a,l
		cp	0
		jr	z,INC
		ld	a,8
		call	INV
LRP		ld	l,0
		ld	a,8
		call	INV
		call	PAUSE
		ret
INC		ld	a,8
		call	INV
LRQ		ld	l,0
		ld	a,8
		call	INV
		call	PAUSE
		ret
QD		ld	a,(LR+2)
		cp	l
		jr	nz,BCK
		scf
		ret
BCK		or	a
		ret

STATUS		ld	hl,MSG
		ld	a,#35
		rst	#20			;BSDOS
		xor	a
		rst	#20			;BSDOS
		ld	(VER),bc
		ld	bc,#80
		add	ix,bc
		ld	(MSGB),ix
		ld	ix,DRV4
		ld	b,4
TDRV		ld	e,b
		ld	a,#0E
		push	bc
		rst	#18			;FDC BIOS
		pop	bc
		ld	(ix+0),e
		ld	(ix+1),d
		dec	ix
		dec	ix
		djnz	TDRV
		ld	a,(25)
		ld	(DRV9),a
		ld	a,#12
		rst	#20			;BSDOS
		jp	nc,RETDOS
		ld	a,e
		ld	(ACTDRV1),a
		ld	(ACTDRV2),a
		ld	a,d
		ld	(ACTDIR1),a
		ld	(ACTDIR2),a
		ld	bc,32765
		ld	a,16
		out	(c),a
		ld	a,(65535)
		ld	d,a
		ld	a,23
		out	(c),a
		ld	a,(65535)
		ld	e,a
		ld	a,d
		cpl
		ld	(65535),a
		ld	a,16
		out	(c),a
		ld	a,(65535)
		cp	d
		jr	nz,NE128
		ld	a,128
NE_128		ld	(MEM128),a
		ld	a,23
		out	(c),a
		ld	a,e
		ld	(65535),a
		ld	a,16
		out	(c),a
		ld	a,d
		ld	(65535),a
		ret
NE128		xor	a
		jr	NE_128

INTRPT		di
		push	af
		push	bc
		push	de
		push	hl
		call	CLOCK
		pop	hl
		pop	de
		pop	bc
		pop	af
		ei
		ret
CLOCK		ld	a,(OPT)
		bit	1,a
		jr	z,SPACES
		ld	hl,LTIME
		ld	bc,256*5+3
		in	a,(c)
		and	15
		add	a,48
		ld	(hl),a
		dec	b
		inc	hl
		in	a,(c)
		and	15
		add	a,48
		ld	(hl),a
		dec	b
		inc	hl
		inc	hl
		in	a,(c)
		and	15
		add	a,48
		ld	(hl),a
		dec	b
		inc	hl
		in	a,(c)
		and	15
		add	a,48
		ld	(hl),a
		dec	b
		inc	hl
		inc	hl
		in	a,(c)
		and	15
		add	a,48
		ld	(hl),a
		dec	b
		inc	hl
		in	a,(c)
		and	15
		add	a,48
		ld	(hl),a
		ld	hl,0*256+54
		ld	de,LTIME
		jp	PRINT
LTIME		db	0,0,58,0,0,58,0,0
		nop
SPACES		ld	hl,16667
		xor	a
		ld	c,6
SPCS1		push	hl
		ld	b,4
SPCS0		ld	(hl),a
		inc	l
		djnz	SPCS0
		pop	hl
		inc	h
		dec	c
		jr	nz,SPCS1
		ret

WORKB		ld	hl,16384
		ld	de,16385
		ld	bc,6144
		ld	(hl),0
		ldir
		ld	hl,22528
		ld	b,32
EEE		ld	(hl),104
		inc	l
		djnz	EEE
		ld	hl,23264
		ld	b,32
FFF		ld	(hl),104
		inc	l
		djnz	FFF
		ld	de,WORKB1
		ld	hl,0*256+0
		call	PRINT
		ld	de,WORKB2
		ld	hl,23*256+0
		call	PRINT
		ld	hl,19*256+4
		ld	de,WORKB3
		ld	a,24
		ld	b,3
		call	PMNU
		ld	hl,19*256+36
		ld	de,WORKB3
		ld	a,24
		ld	b,3
		call	PMNU
		ld	hl,1*256+0
		ld	de,22*256+16
		ld	a,77
		call	MENU2
		ld	hl,1*256+16
		ld	de,22*256+16
		ld	a,77
		call	MENU2
		ld	hl,18*256+2
		ld	a,28
		call	LINE1
		ld	hl,18*256+34
		ld	a,28
		jp	LINE1

WORKB1		db	"  X  File  Util"
		db	"ities  Panel  M"
		db	"anager"
		nop
WORKB2		db	" 1 Lft 2 Rgt 3 "
		db	"View 4 Edit 5 C"
		db	"op 6 Mov 7 Fnd "
		db	"8 Del 9 Nam 0 M"
		db	"enu"
		nop
WORKB3		db	"Path: 000 / 000"
		db	" / 00000"
		nop
WORKB4		db	"Disk name:     "
		db	"        "
		nop
WORKB5		db	"  Free: 00000 s"
		db	"ectors  "
		nop

RETDOS		di
		ld	sp,0
		ld	hl,0
		ld	a,#35
		rst	#20			;BSDOS
		ld	e,0
		ld	a,BDSDDX		;sluzba SDDX
		rst	#20			;BSDOS
		call	ROMDIS
		im	1
		ld	hl,23295
		ld	de,23294
		ld	bc,6911
		ld	(hl),0
		lddr
		xor	a
		ld	de,65535
		jp	#11CB

PROZ		ds	17
		nop
NAME		ds	10
		nop
NUMBER		ds	5
		nop
NUMBE		db	32
		ds	3
		nop
NUMBER32	ds	7
		nop

FILE1		dw	0
POZICE1		dw	2*256+2
INPANEL1	dw	PANEL1
OORT1		dw	PANEL1
OORT2		dw	PANEL1+512
LENDIR1		dw	0
ACTDRV1		nop
ACTDIR1		nop
PANEL1		ds	1024
JIST1		ds	1024
FILE2		dw	0
POZICE2		dw	2*256+34
INPANEL2	dw	PANEL1
OORT3		dw	PANEL1
OORT4		dw	PANEL1+512
LENDIR2		dw	0
ACTDRV2		nop
ACTDIR2		nop
PANEL2		ds	1024
JIST2		ds	1024


FONT		db	#00, #00, #00, #00, #00, #00, #00, #00
		db	#00, #44, #44, #44, #44, #00, #44, #00
		db	#00, #AA, #AA, #00, #00, #00, #00, #00
		db	#00, #00, #AA, #EE, #AA, #EE, #AA, #00
		db	#00, #00, #EE, #CC, #EE, #66, #EE, #00
		db	#00, #AA, #22, #44, #44, #88, #AA, #00
		db	#00, #44, #AA, #44, #AA, #EE, #66, #00
		db	#00, #44, #44, #88, #00, #00, #00, #00
		db	#00, #66, #44, #44, #44, #44, #66, #00
		db	#00, #CC, #44, #44, #44, #44, #CC, #00
		db	#00, #00, #44, #EE, #44, #EE, #44, #00
		db	#00, #00, #44, #44, #EE, #44, #44, #00
		db	#00, #00, #00, #00, #44, #44, #88, #00
		db	#00, #00, #00, #00, #EE, #00, #00, #00
		db	#00, #00, #00, #00, #00, #CC, #CC, #00
		db	#00, #22, #22, #44, #44, #88, #88, #00
		db	#00, #EE, #AA, #AA, #AA, #AA, #EE, #00
		db	#00, #44, #CC, #44, #44, #44, #EE, #00
		db	#00, #EE, #22, #EE, #88, #AA, #EE, #00
		db	#00, #EE, #22, #66, #22, #AA, #EE, #00
		db	#00, #88, #AA, #AA, #EE, #22, #22, #00
		db	#00, #EE, #88, #EE, #22, #AA, #EE, #00
		db	#00, #EE, #88, #EE, #AA, #AA, #EE, #00
		db	#00, #EE, #AA, #22, #22, #22, #22, #00
		db	#00, #EE, #AA, #EE, #AA, #AA, #EE, #00
		db	#00, #EE, #AA, #EE, #22, #AA, #EE, #00
		db	#00, #00, #00, #44, #00, #44, #00, #00
		db	#00, #00, #00, #44, #00, #44, #88, #00
		db	#00, #00, #22, #44, #88, #44, #22, #00
		db	#00, #00, #00, #EE, #00, #EE, #00, #00
		db	#00, #00, #88, #44, #22, #44, #88, #00
		db	#00, #EE, #AA, #66, #44, #00, #44, #00
		db	#00, #44, #AA, #EE, #EE, #88, #66, #00
		db	#00, #EE, #AA, #EE, #AA, #AA, #AA, #00
		db	#00, #EE, #AA, #CC, #AA, #AA, #EE, #00
		db	#00, #EE, #AA, #88, #88, #AA, #EE, #00
		db	#00, #CC, #AA, #AA, #AA, #AA, #CC, #00
		db	#00, #EE, #88, #CC, #88, #88, #EE, #00
		db	#00, #EE, #88, #CC, #88, #88, #88, #00
		db	#00, #EE, #AA, #88, #EE, #AA, #EE, #00
		db	#00, #AA, #AA, #EE, #AA, #AA, #AA, #00
		db	#00, #EE, #44, #44, #44, #44, #EE, #00
		db	#00, #EE, #22, #22, #22, #AA, #EE, #00
		db	#00, #AA, #AA, #CC, #AA, #AA, #AA, #00
		db	#00, #88, #88, #88, #88, #AA, #EE, #00
		db	#00, #AA, #EE, #AA, #AA, #AA, #AA, #00
		db	#00, #EE, #AA, #AA, #AA, #AA, #AA, #00
		db	#00, #EE, #AA, #AA, #AA, #AA, #EE, #00
		db	#00, #EE, #AA, #EE, #88, #88, #88, #00
		db	#00, #EE, #AA, #AA, #AA, #EE, #EE, #00
		db	#00, #EE, #AA, #EE, #CC, #AA, #AA, #00
		db	#00, #EE, #88, #EE, #22, #AA, #EE, #00
		db	#00, #EE, #44, #44, #44, #44, #44, #00
		db	#00, #AA, #AA, #AA, #AA, #AA, #EE, #00
		db	#00, #AA, #AA, #AA, #AA, #AA, #44, #00
		db	#00, #AA, #AA, #EE, #EE, #EE, #44, #00
		db	#00, #AA, #AA, #44, #AA, #AA, #AA, #00
		db	#00, #AA, #AA, #AA, #EE, #22, #EE, #00
		db	#00, #EE, #22, #EE, #88, #AA, #EE, #00
		db	#00, #66, #44, #44, #44, #44, #66, #00
		db	#00, #88, #88, #44, #44, #22, #22, #00
		db	#00, #66, #22, #22, #22, #22, #66, #00
		db	#00, #44, #EE, #44, #44, #44, #44, #00
		db	#00, #00, #00, #00, #00, #00, #EE, #00
		db	#00, #22, #44, #66, #44, #44, #EE, #00
		db	#00, #00, #EE, #22, #EE, #AA, #EE, #00
		db	#00, #88, #88, #EE, #AA, #AA, #EE, #00
		db	#00, #00, #EE, #88, #88, #88, #EE, #00
		db	#00, #22, #22, #EE, #AA, #AA, #EE, #00
		db	#00, #00, #EE, #AA, #EE, #88, #EE, #00
		db	#00, #66, #88, #CC, #88, #88, #88, #00
		db	#00, #00, #EE, #AA, #EE, #22, #EE, #00
		db	#00, #88, #88, #EE, #AA, #AA, #AA, #00
		db	#00, #44, #00, #CC, #44, #44, #EE, #00
		db	#00, #22, #00, #22, #22, #AA, #EE, #00
		db	#00, #88, #88, #AA, #CC, #AA, #AA, #00
		db	#00, #88, #88, #88, #88, #88, #66, #00
		db	#00, #00, #AA, #EE, #AA, #AA, #AA, #00
		db	#00, #00, #EE, #AA, #AA, #AA, #AA, #00
		db	#00, #00, #EE, #AA, #AA, #AA, #EE, #00
		db	#00, #00, #EE, #AA, #EE, #88, #88, #00
		db	#00, #00, #EE, #AA, #EE, #22, #22, #00
		db	#00, #00, #EE, #88, #88, #88, #88, #00
		db	#00, #00, #EE, #88, #EE, #22, #EE, #00
		db	#00, #44, #EE, #44, #44, #44, #66, #00
		db	#00, #00, #AA, #AA, #AA, #AA, #EE, #00
		db	#00, #00, #AA, #AA, #AA, #AA, #44, #00
		db	#00, #00, #AA, #AA, #EE, #EE, #EE, #00
		db	#00, #00, #AA, #AA, #44, #AA, #AA, #00
		db	#00, #00, #AA, #AA, #EE, #22, #CC, #00
		db	#00, #00, #EE, #22, #EE, #88, #EE, #00
		db	#00, #66, #44, #88, #44, #44, #66, #00
		db	#00, #44, #44, #44, #44, #44, #44, #00
		db	#00, #CC, #44, #22, #44, #44, #CC, #00
		db	#00, #AA, #AA, #00, #00, #00, #00, #00
		db	#00, #44, #AA, #AA, #AA, #AA, #EE, #00
		db	#00, #EE, #AA, #88, #88, #AA, #EE, #44
		db	#AA, #00, #AA, #AA, #AA, #AA, #EE, #00
		db	#22, #44, #EE, #AA, #EE, #88, #EE, #00
		db	#44, #AA, #EE, #22, #EE, #AA, #EE, #00
		db	#AA, #00, #EE, #22, #EE, #AA, #EE, #00
		db	#44, #00, #AA, #AA, #AA, #AA, #EE, #00
		db	#22, #44, #EE, #88, #88, #88, #EE, #00
		db	#00, #00, #EE, #88, #88, #88, #EE, #44
		db	#00, #88, #AA, #CC, #88, #88, #66, #00
		db	#AA, #00, #EE, #AA, #EE, #88, #EE, #00
		db	#AA, #00, #EE, #AA, #AA, #AA, #EE, #00
		db	#AA, #00, #EE, #AA, #AA, #AA, #EE, #00
		db	#44, #AA, #CC, #44, #44, #44, #EE, #00
		db	#22, #44, #EE, #22, #EE, #88, #EE, #00
		db	#AA, #00, #EE, #AA, #EE, #AA, #AA, #00
		db	#22, #44, #EE, #AA, #88, #AA, #EE, #00
		db	#22, #44, #EE, #88, #CC, #88, #EE, #00
		db	#22, #44, #88, #88, #88, #AA, #EE, #00
		db	#22, #44, #88, #88, #88, #88, #66, #00
		db	#44, #AA, #EE, #AA, #AA, #AA, #EE, #00
		db	#AA, #00, #EE, #AA, #AA, #AA, #EE, #00
		db	#22, #AA, #88, #88, #88, #AA, #EE, #00
		db	#22, #AA, #88, #88, #88, #88, #66, #00
		db	#22, #44, #EE, #88, #EE, #22, #EE, #00
		db	#22, #44, #EE, #88, #EE, #22, #EE, #00
		db	#AA, #00, #EE, #AA, #AA, #AA, #EE, #00
		db	#AA, #00, #AA, #AA, #AA, #AA, #EE, #00
		db	#AA, #44, #EE, #44, #44, #44, #44, #00
		db	#22, #22, #44, #EE, #44, #44, #66, #00
		db	#00, #88, #AA, #CC, #88, #AA, #EE, #00
		db	#00, #00, #00, #AA, #44, #AA, #00, #00
		db	#AA, #44, #EE, #88, #88, #88, #EE, #00
		db	#22, #44, #EE, #22, #EE, #AA, #EE, #00
		db	#22, #44, #00, #CC, #44, #44, #EE, #00
		db	#22, #44, #EE, #AA, #AA, #AA, #EE, #00
		db	#22, #44, #AA, #AA, #AA, #AA, #EE, #00
		db	#00, #EE, #AA, #EE, #AA, #AA, #AA, #22
		db	#00, #00, #EE, #22, #EE, #AA, #EE, #22
		db	#AA, #44, #EE, #22, #EE, #88, #EE, #00
		db	#AA, #44, #EE, #22, #EE, #88, #EE, #00
		db	#00, #EE, #88, #CC, #88, #88, #EE, #22
		db	#00, #00, #EE, #AA, #EE, #88, #EE, #22
		db	#00, #00, #00, #00, #00, #00, #00, #00
		db	#22, #44, #EE, #22, #EE, #88, #EE, #00
		db	#AA, #44, #EE, #88, #88, #88, #EE, #00
		db	#00, #00, #EE, #88, #EE, #22, #EE, #44
		db	#00, #00, #00, #44, #88, #44, #00, #00
		db	#00, #00, #00, #88, #44, #88, #00, #00
		db	#00, #AA, #00, #AA, #00, #AA, #00, #AA
		db	#44, #AA, #44, #AA, #44, #AA, #44, #AA
		db	#AA, #EE, #AA, #EE, #AA, #EE, #AA, #EE
		db	#22, #22, #22, #22, #22, #22, #22, #22
		db	#22, #22, #22, #22, #EE, #22, #22, #22
		db	#22, #44, #EE, #AA, #EE, #AA, #AA, #00
		db	#44, #AA, #EE, #AA, #EE, #AA, #AA, #00
		db	#AA, #44, #EE, #88, #CC, #88, #EE, #00
		db	#00, #EE, #88, #EE, #22, #AA, #EE, #44
		db	#55, #55, #DD, #11, #DD, #55, #55, #55
		db	#55, #55, #55, #55, #55, #55, #55, #55
		db	#00, #00, #FF, #11, #DD, #55, #55, #55
		db	#55, #55, #DD, #11, #FF, #00, #00, #00
		db	#44, #00, #EE, #22, #EE, #88, #EE, #00
		db	#44, #00, #EE, #22, #EE, #88, #EE, #00
		db	#00, #00, #00, #00, #EE, #22, #22, #22
		db	#44, #44, #44, #44, #77, #00, #00, #00
		db	#22, #22, #22, #22, #FF, #00, #00, #00
		db	#00, #00, #00, #00, #FF, #22, #22, #22
		db	#44, #44, #44, #44, #77, #44, #44, #44
		db	#00, #00, #00, #00, #FF, #00, #00, #00
		db	#20, #20, #20, #20, #FF, #20, #20, #20
		db	#AA, #44, #EE, #AA, #EE, #AA, #AA, #00
		db	#AA, #44, #EE, #22, #EE, #AA, #EE, #00
		db	#AA, #AA, #BB, #88, #FF, #00, #00, #00
		db	#00, #00, #FF, #88, #BB, #AA, #AA, #AA
		db	#55, #55, #DD, #00, #FF, #00, #00, #00
		db	#00, #00, #FF, #00, #DD, #55, #55, #55
		db	#AA, #AA, #BB, #88, #BB, #AA, #AA, #AA
		db	#00, #00, #FF, #00, #FF, #00, #00, #00
		db	#55, #55, #DD, #00, #DD, #55, #55, #55
		db	#00, #00, #AA, #EE, #AA, #EE, #AA, #00
		db	#00, #66, #22, #EE, #AA, #AA, #EE, #00
		db	#00, #CC, #AA, #EE, #AA, #AA, #CC, #00
		db	#AA, #44, #CC, #AA, #AA, #AA, #CC, #00
		db	#AA, #00, #EE, #88, #CC, #88, #EE, #00
		db	#44, #66, #22, #EE, #AA, #AA, #EE, #00
		db	#AA, #44, #EE, #AA, #AA, #AA, #AA, #00
		db	#22, #44, #EE, #44, #44, #44, #EE, #00
		db	#44, #AA, #EE, #44, #44, #44, #EE, #00
		db	#AA, #44, #EE, #AA, #EE, #88, #EE, #00
		db	#22, #22, #22, #22, #EE, #00, #00, #00
		db	#00, #00, #00, #00, #77, #44, #44, #44
		db	#00, #EE, #EE, #EE, #EE, #EE, #EE, #00
		db	#00, #00, #00, #00, #EE, #EE, #EE, #00
		db	#00, #00, #EE, #44, #44, #44, #44, #22
		db	#44, #00, #AA, #AA, #AA, #AA, #EE, #00
		db	#00, #EE, #EE, #EE, #00, #00, #00, #00
		db	#22, #44, #EE, #AA, #AA, #AA, #EE, #00
		db	#00, #00, #CC, #AA, #CC, #AA, #EE, #00
		db	#44, #AA, #EE, #AA, #AA, #AA, #EE, #00
		db	#22, #44, #EE, #AA, #AA, #AA, #AA, #00
		db	#22, #44, #EE, #AA, #AA, #AA, #AA, #00
		db	#AA, #44, #EE, #AA, #AA, #AA, #AA, #00
		db	#AA, #44, #EE, #88, #EE, #22, #EE, #00
		db	#AA, #44, #EE, #88, #EE, #22, #EE, #00
		db	#22, #44, #EE, #AA, #EE, #CC, #AA, #00
		db	#22, #44, #AA, #AA, #AA, #AA, #EE, #00
		db	#22, #44, #EE, #88, #88, #88, #88, #00
		db	#AA, #00, #AA, #AA, #AA, #AA, #EE, #00
		db	#22, #44, #AA, #AA, #EE, #22, #CC, #00
		db	#22, #44, #AA, #AA, #EE, #22, #EE, #00
		db	#00, #44, #EE, #44, #44, #44, #66, #44
		db	#00, #08, #10, #00, #00, #00, #00, #00
		db	#00, #00, #00, #00, #EE, #00, #00, #00
		db	#00, #AA, #AA, #00, #00, #00, #00, #00
		db	#44, #44, #44, #44, #44, #44, #44, #44
		db	#AA, #44, #00, #00, #00, #00, #00, #00
		db	#AA, #44, #00, #00, #00, #00, #00, #00
		db	#66, #44, #EE, #AA, #EE, #44, #CC, #00
		db	#00, #44, #00, #EE, #00, #44, #00, #00
		db	#AA, #AA, #AA, #AA, #AA, #AA, #AA, #AA
		db	#44, #AA, #44, #00, #00, #00, #00, #00
		db	#00, #AA, #00, #00, #00, #00, #00, #00
		db	#00, #44, #00, #00, #00, #00, #00, #00
		db	#AA, #00, #AA, #AA, #AA, #AA, #EE, #00
		db	#AA, #44, #EE, #AA, #EE, #CC, #AA, #00
		db	#AA, #44, #EE, #88, #88, #88, #88, #00
		db	#00, #00, #00, #00, #00, #00, #00, #FF
		db	#00, #00, #00, #00, #00, #00, #00, #00


FT
		ds	256
;aby bylo vic pro stack
STACK
A0STACK		equ	$-FT

A0LEN		equ	$-START
A0LAST

		org	#AD00
A0SPACE		equ	$-A0LAST
TEXT		ds	32

IXPOS		ds	2
HLPOS		ds	2
NUM		ds	6
KOEF1		ds	2
KOEF2		ds	2
POS		ds	2
VER		ds	2
DRV1		ds	2
DRV2		ds	2
DRV3		ds	2
DRV4		ds	2
DRV9		ds	1
;0=ne
MEM128		ds	1
;0 nebo 128
BIOS		ds	1
MSGB		ds	2
FASTMEM		ds	32
SECTOUT
BOOT		ds	1024
SECTIN		ds	1024
MSGSP1		ds	2
MSGSP2		ds	82
MSGST		ds	540
STORE		ds	2052

A0COMP

		savebin "fc01delta.cod",START,$-START
		