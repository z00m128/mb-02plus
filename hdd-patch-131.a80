

         org  32768
         ent  $


;------------------------------
;hdd 2 mb02 v:1.31    dR0n_K3l
;------------------------------

;zakladni verze - cte 2x 1 sect
;kapacita diskimage - 2MB
;diskimage format   - 128x8x2
;slave/master, write protect
;test 255 (tnt, hood)

;------------------------------


         jp   INSTALL

VDT      defs 8+1024

P_DAT    defb 195
P_ERR    defb 199
P_HSE    defb 203
P_NSE    defb 207
P_CYL    defb 211
P_CYH    defb 215
P_HEA    defb 219
P_COM    defb 223


INSTALL  di


         ld   a,(P_DAT)
         ld   (P1+1),a
         ld   (P11+1),a
         ld   a,(P_ERR)
         ld   (P2+1),a
         ld   a,(P_HSE)
         ld   (P3+1),a
         ld   (P31+1),a
         ld   a,(P_NSE)
         ld   (P4+1),a
         ld   (P41+1),a
         ld   a,(P_CYL)
         ld   (P5+1),a
         ld   (P51+1),a
         ld   a,(P_CYH)
         ld   (P6+1),a
         ld   (P61+1),a
         ld   a,(P_HEA)
         ld   (P7+1),a
         ld   (P71+1),a
         ld   a,(P_COM)
         ld   (P8+1),a
         ld   (P81+1),a
         ld   (P82+1),a
         ld   (P83+1),a


         ld   hl,15616
         ld   de,40000
         ld   bc,768
         ldir

         ld   hl,VDT
         ld   de,TAB
         ld   bc,1024+8
         ldir

         ld   a,97
         out  (23),a

         ld   hl,ADR20
         ld   de,20
         ld   bc,12
         ldir

         ld   hl,ADR35
         ld   de,35
         ld   c,5
         ldir

         ld   hl,ADR43
         ld   de,43
         ld   c,5
         ldir

         ld   hl,ADR62
         ld   de,62
         ld   c,11
         ldir

         ld   a,205
         ld   (#13CA),a
         ld   hl,62
         ld   (#13CA+1),hl
;set no_verify patch

         ld   hl,SEM
         ld   de,144
         ld   bc,112
         ldir

         ld   a,98
         out  (23),a

         ld   hl,ADR16
         ld   de,0
         ld   bc,33+16
         ldir

         ld   hl,201*256+251
         ld   (56),hl

         ld   hl,SEM1
         ld   de,144
         ld   bc,LEN
         ldir

         ld   hl,40000
         ld   de,15616
         ld   bc,768
         ldir

         ld   a,%01000000
         out  (23),a
         ei
         ret


;------------------------------
;------------------------------
;adresa 62 v dos_bnk
ADR62
         ld   c,a
         ld   a,(#03EF)
         cp   5
         ld   a,c
         ret  nc
         jp   #1463

;------------------------------
;------------------------------

;adresa 20 v dos_bnk
;hdd_bnk musi byt dos_bnk+1

ADR20
         ld   (hl),b
         inc  a
         out  (23),a
         jp   144

;adresa 27
         ld   a,98
         out  (23),a
         ret

;------------------------------
;------------------------------

;adresa 35 v dos_bnk

ADR35
         otir
         inc  a
         out  (23),a

;------------------------------
;------------------------------

;adresa 43 v dos_bnk

ADR43
         inir
         inc  a
         out  (23),a

;------------------------------
;------------------------------

;------------------------------
;------------------------------

;adresa 16 v hdd_bnk

INIR     equ  41
OTIR     equ  33

ADR16
         di
         xor  a
         ld   de,65535
         jp   5
         defm "HddDrive"

         ld   a,97
         out  (23),a
         ld   (hl),b
         inc  a
         out  (23),a
         ret
         nop
         nop
;adr27 - route to hdd_bnk
         ld   a,97
         out  (23),a
         defb 24,111
;jr   144

;adr33 - route to otir
;musi byt ld  a,97
;a taky ld bc,data_port
         out  (23),a
         otir
         inc  a
         out  (23),a
         ret

;adr41
;musi byt ld  a,97
;a taky ld bc,data_port
         out  (23),a
         inir
         inc  a
         out  (23),a
         ret

;------------------------------
;------------------------------
;adresa 144 v dos_bnk


SEM
         org  144
         put  SEM


ADR144D
         push hl
         ld   hl,255
         ld   (hl),a
         dec  hl
         ex   (sp),hl

         cp   12
;         jr   z,PRYC
         jr   c,SKIP1
         cp   15
         jr   c,SLUZ1214
SKIP1
         cp   16
         jr   z,SETMLT
         or   a
         ret  z
         cp   15
         ret  nc
ACT      ret

         inc  sp
         inc  sp
AAA
         cp   4
         jr   c,LOOP12
         cp   6
         jr   c,RDWRSEC
LOOP12   cp   7
         jr   z,RDWRSEC
         xor  a
         ret


RDWRSEC  push hl
         push de
         ld   b,a
         ld   (SP_ST+1),sp
         ld   sp,128
         call 27
SP_ST    ld   sp,0
         push bc
RUT      call NIC
         pop  af
         pop  de
         pop  hl
NIC      ret


SETMLT   ld   a,h
         or   l
         jr   nz,LOOP14
         ld   hl,NIC
LOOP14   ld   (RUT+1),hl
         ret


SLUZ1214
         push de
         push hl
         ld   b,a
         ld   (SP_ST+1),sp
         ld   sp,128
         call 27
         ld   sp,(SP_ST+1)
         ld   a,b
         pop  hl
         or   a
         jr   nz,NO_NFO
         inc  sp
         inc  sp
         push de
NO_NFO
         pop  de
         cp   255
         ret  z
;nz=hned se vrat
;z=predej dal
PRYC
         inc  sp
         inc  sp
         ret

         nop
         nop

A1_254
         ld   a,85
;tady je 256


;------------------------------
;------------------------------


SEM1     equ  $-ADR144D+SEM
         org  144
         put  SEM1

;adresa 144 v hdd_bnk


KKK
         jp   PRESKOC

TAB      equ  $-KKK+SEM1


M_SEC1   defb 17
M_HEA1   defb 8
M_CYL1   defw 751
;        primary

M_SEC2   defb 17
M_HEA2   defb 8
M_CYL2   defw 751
;        secondary


TAB_DRV
         defs 1024

PRESKOC
         push hl
         ld   hl,RET
         ex   (sp),hl

         ld   a,b

         cp   12
         jr   z,AKTIVE1
         cp   13
         jr   z,PASIVE1
         cp   14
         jr   z,INFO1

         cp   4
         jr   z,RD_SEC
         cp   5
         jp   z,WR_SEC
         cp   7
         jp   z,WR_TRK
         xor  a

         ret


RET
         ld   b,a
         jp   27


;---------

INFO1    ld   a,e
         call TST_DRV
         ld   a,255
         ret  z
         ld   de,128*256+3
         xor  a
         ret

;---------

PASIVE1  ld   a,201
         ld   hl,ACT
         ld   b,a
         rst  16
         ld   a,255
         ret

;---------

AKTIVE1  call PASIVE1
         ld   a,e
         call TST_DRV
         ld   a,255
         ret  z
         xor  a
         ld   hl,ACT
         ld   b,a
         rst  16
         ld   a,2
         ret

;---------

RD_SEC
         ld   (HL_ST+1),hl
         call SECT_NUM
         or   a
         ret  nz

         push hl
         call RDD
         pop  hl
         or   a
         ret  nz
         inc  hl
         call RDD
         ret


RDD
         call PREPOC

HL_ST    ld   hl,0
         push hl
         call READ
         pop  hl
         or   a
         ret  nz
ADD
         ld   de,512
         add  hl,de
         ld   (HL_ST+1),hl
         ret


;------------------------------


WR_SEC
         ld   (HL_ST1+1),hl

WR_PROT  ld   a,0
         or   a
         ret  nz

         call SECT_NUM
         or   a
         ret  nz

         push hl
         call WRR
         pop  hl
         or   a
         ret  nz
         inc  hl
         call WRR
         ret

WRR
         call PREPOC

HL_ST1   ld   hl,0
         push hl
         call WRITE
         pop  hl
         or   a
         ret  nz
ADD1
         ld   de,512
         add  hl,de
         ld   (HL_ST1+1),hl
         ret

;------------------------------

WR_TRK

         ld   a,e
         and  128
         ld   e,a
         xor  a
WTRK1
         inc  e
         push de
         push hl
         push af
         call WR_SEC
         pop  af
         pop  hl
         ld   de,1024
         add  hl,de
         pop  de
         inc  a
         cp   9
;pocet sektoru -1
         jr   nz,WTRK1

         ret



;------------------------------

SECT_NUM
         ld   l,d
         ld   h,0
         add  hl,hl
         add  hl,hl
         add  hl,hl
         add  hl,hl
;*16
         ld   a,e
         dec  a
         and  %00000111
         bit  7,e
         jr   z,RDS1
         or   %00001000
RDS1
         or   l
         ld   l,a

;hl = podivne cislo sectoru
;     pocita se od 0

         add  hl,hl
         ld   a,h
         and  %11110000
         ret  z

         ld   a,4
         out  (254),a

         ld   a,%00010000
         ret

;seek error (zapis za hranici)

;------------------------------


PREPOC
;v hl vstupuje cislo sectoru
;od 0

LOW24    ld   de,0
         add  hl,de
HIG24    ld   de,0
         jr   nc,PREP1
         inc  de
PREP1
M_SEC    ld   a,0
         call DIV248
         ld   e,d
         ld   d,0
         push de
;de -> sec
M_HEA    ld   a,0
         ld   e,a
         ld   d,0
         call DIV
         push de
;de -> heds
M_CYL    ld   de,0
         call DIV
;de -> cyl
         pop  hl
         ld   b,l
         pop  hl
         ld   c,l
         inc  c
         ret


;------------------------------

READ
         call TST_BSY
         jr   nz,ERROR

         ld   a,b
HEA_RD   or   %10100000
P7       out  (219),a
;cislo hlavicky

         ld   a,1
P3       out  (203),a
;pocet sektoru

         ld   a,c
P4       out  (207),a
;cislo sektoru od 1

         ld   a,e
P5       out  (211),a
         ld   a,d
P6       out  (215),a
;cislo cylindru

         ld   a,#20
P8       out  (223),a
;read with retries

         call TST_BSY
         jr   nz,ERROR

P1       ld   bc,195
         ld   a,97
         call INIR
         ld   a,97
         call INIR

         call TST_ERR
         jr   nz,ERROR

         xor  a
         ret


;------------------------------


WRITE

         call TST_BSY
         jr   nz,ERROR

         ld   a,b
HEA_WR   or   %10100000
P71      out  (219),a
;hlavicka

         ld   a,1
P31      out  (203),a
;pocet sektoru
         ld   a,c
P41      out  (207),a
;cislo sektoru od 1
         ld   a,e
P51      out  (211),a
         ld   a,d
P61      out  (215),a
;cislo cylindru

         ld   a,#30
P81      out  (223),a
;write with retries

         call TST_BSY
         jr   nz,ERROR

P11      ld   bc,195
         ld   a,97
         call OTIR
         ld   a,97
         call OTIR

         call TST_BSY
         jr   nz,ERROR
         call TST_ERR
         jr   nz,ERROR

         xor  a
         ret

;------------------------------

ERROR
         cp   255
         jr   nz,ERR1
         ld   a,1
         ret
ERR1
         and  %01010011
         jr   z,ERR2
         ld   a,8
         ret
ERR2
         ld   a,128
         ret



;------------------------------

TST_BSY
         push hl
         push bc
         ld   hl,0

TST1
         dec  hl
         ld   a,l
         or   h
         jr   z,TOUT1
P82      in   a,(223)
         inc  a
         jr   z,P82
         dec  a
         bit  7,a
         jr   nz,TST1
         pop  bc
         pop  hl
         ret
TOUT1
         ld   a,255
         or   a
         pop  bc
         pop  hl
         ret

;------------------------------

TST_ERR
P83      in   a,(223)
         inc  a
         jr   z,P83
         dec  a
         and  1
         ret  z
P2       in   a,(199)
         ret

;------------------------------

TST_DRV
         ld   l,a
         ld   h,0
         add  hl,hl
         add  hl,hl
         ld   de,TAB_DRV
         add  hl,de

         ld   e,(hl)
         inc  hl
         ld   d,(hl)
         inc  hl
         push de
         ld   e,(hl)
         inc  hl
         ld   d,(hl)
         pop  hl

         ld   a,d
         rrca
         rrca
         and  %01000000
         ld   (WR_PROT+1),a

         ld   a,d
         or   %10100000
         and  %11110000
         ld   (HEA_WR+1),a
         ld   (HEA_RD+1),a

         push hl
         and  %00010000
         jr   z,PRIM
         ld   a,(M_SEC2)
         ld   (M_SEC+1),a
         ld   a,(M_HEA2)
         ld   (M_HEA+1),a
         ld   hl,(M_CYL2)
         ld   (M_CYL+1),hl
         jr   SLAVE

PRIM
         ld   a,(M_SEC1)
         ld   (M_SEC+1),a
         ld   a,(M_HEA1)
         ld   (M_HEA+1),a
         ld   hl,(M_CYL1)
         ld   (M_CYL+1),hl
SLAVE

         pop  hl
         ld   d,0
         ld   (LOW24+1),hl
         ld   (HIG24+1),de

         ld   a,e
         or   h
         or   l
         ret

;------------------------------

DIV
         ld   a,h
         ld   c,l
         ld   hl,0
         ld   b,16
DIV2     slia c
         rla
         adc  hl,hl
         sbc  hl,de
         jr   nc,DIV3
         add  hl,de
         dec  c
DIV3     djnz DIV2
         ex   de,hl
         ld   h,a
         ld   l,c
         ret

;------------------------------

DIV248
         push ix
         ld   bc,0
         ld   d,0
         ld   lx,a
         ld   hx,24
DIV2481
         slia l
         rl   h
         rl   e
         rl   d
         rl   c
         rl   b
;adc bcd,bcd

         ld   a,d
         sbc  a,lx
         ld   d,a
         jp   nc,DIVOK1
         dec  c
         jp   p,DIVOK1
         dec  b
DIVOK1
;sbc bcd,lx
         jp   p,DIVOK3

         add  a,lx
         ld   d,a
         jp   nc,DIVOK2
         inc  c
         jp   nz,DIVOK2
         inc  b
DIVOK2
         dec  l
DIVOK3
;add bcd,lx

         dec  hx
         jp   nz,DIV2481

         pop  ix
         ret


LEN      equ  $-144

END      equ  $-KKK+SEM1
A1LEN    equ  END-32768

BUFFER
